# Automatically generated from mime_types.txt on 2009-01-18T17:56:49.155
module TECode
module MimeType
module Application
    ACTIVEMESSAGE = MIME::Types["application/activemessage"][0]
    ANDREW_INSET = MIME::Types["application/andrew-inset"][0]
    APPLEFILE = MIME::Types["application/applefile"][0]
    ATOM_XML = MIME::Types["application/atom+xml"][0]
    ATOMICMAIL = MIME::Types["application/atomicmail"][0]
    ATOMCAT_XML = MIME::Types["application/atomcat+xml"][0]
    ATOMSVC_XML = MIME::Types["application/atomsvc+xml"][0]
    AUTH_POLICY_XML = MIME::Types["application/auth-policy+xml"][0]
    BATCH_SMTP = MIME::Types["application/batch-SMTP"][0]
    BEEP_XML = MIME::Types["application/beep+xml"][0]
    CALS_1840 = MIME::Types["application/cals-1840"][0]
    CCXML_XML = MIME::Types["application/ccxml+xml"][0]
    CELLML_XML = MIME::Types["application/cellml+xml"][0]
    CNRP_XML = MIME::Types["application/cnrp+xml"][0]
    COMMONGROUND = MIME::Types["application/commonground"][0]
    CONFERENCE_INFO_XML = MIME::Types["application/conference-info+xml"][0]
    CPL_XML = MIME::Types["application/cpl+xml"][0]
    CSTA_XML = MIME::Types["application/csta+xml"][0]
    CSTADATA_XML = MIME::Types["application/CSTAdata+xml"][0]
    CYBERCASH = MIME::Types["application/cybercash"][0]
    DAVMOUNT_XML = MIME::Types["application/davmount+xml"][0]
    DCA_RFT = MIME::Types["application/dca-rft"][0]
    DEC_DX = MIME::Types["application/dec-dx"][0]
    DIALOG_INFO_XML = MIME::Types["application/dialog-info+xml"][0]
    DICOM = MIME::Types["application/dicom"][0]
    DNS = MIME::Types["application/dns"][0]
    DVCS = MIME::Types["application/dvcs"][0]
    ECMASCRIPT = MIME::Types["application/ecmascript"][0]
    EDI_CONSENT = MIME::Types["application/EDI-Consent"][0]
    EDIFACT = MIME::Types["application/EDIFACT"][0]
    EDI_X12 = MIME::Types["application/EDI-X12"][0]
    EPP_XML = MIME::Types["application/epp+xml"][0]
    ESHOP = MIME::Types["application/eshop"][0]
    EXAMPLE = MIME::Types["application/example"][0]
    FASTINFOSET = MIME::Types["application/fastinfoset"][0]
    FASTSOAP = MIME::Types["application/fastsoap"][0]
    FITS = MIME::Types["application/fits"][0]
    FONT_TDPFR = MIME::Types["application/font-tdpfr"][0]
    H224 = MIME::Types["application/H224"][0]
    HTTP = MIME::Types["application/http"][0]
    HYPERSTUDIO = MIME::Types["application/hyperstudio"][0]
    IGES = MIME::Types["application/iges"][0]
    IM_ISCOMPOSING_XML = MIME::Types["application/im-iscomposing+xml"][0]
    INDEX = MIME::Types["application/index"][0]
    INDEX_CMD = MIME::Types["application/index.cmd"][0]
    INDEX_OBJ = MIME::Types["application/index.obj"][0]
    INDEX_RESPONSE = MIME::Types["application/index.response"][0]
    INDEX_VND = MIME::Types["application/index.vnd"][0]
    IOTP = MIME::Types["application/iotp"][0]
    IPP = MIME::Types["application/ipp"][0]
    ISUP = MIME::Types["application/isup"][0]
    JAVASCRIPT = MIME::Types["application/javascript"][0]
    JSON = MIME::Types["application/json"][0]
    KPML_REQUEST_XML = MIME::Types["application/kpml-request+xml"][0]
    KPML_RESPONSE_XML = MIME::Types["application/kpml-response+xml"][0]
    LOST_XML = MIME::Types["application/lost+xml"][0]
    MAC_BINHEX40 = MIME::Types["application/mac-binhex40"][0]
    MACWRITEII = MIME::Types["application/macwriteii"][0]
    MARC = MIME::Types["application/marc"][0]
    MATHEMATICA = MIME::Types["application/mathematica"][0]
    MBMS_ASSOCIATED_PROCEDURE_DESCRIPTION_XML = MIME::Types["application/mbms-associated-procedure-description+xml"][0]
    MBMS_DEREGISTER_XML = MIME::Types["application/mbms-deregister+xml"][0]
    MBMS_ENVELOPE_XML = MIME::Types["application/mbms-envelope+xml"][0]
    MBMS_MSK_RESPONSE_XML = MIME::Types["application/mbms-msk-response+xml"][0]
    MBMS_MSK_XML = MIME::Types["application/mbms-msk+xml"][0]
    MBMS_PROTECTION_DESCRIPTION_XML = MIME::Types["application/mbms-protection-description+xml"][0]
    MBMS_RECEPTION_REPORT_XML = MIME::Types["application/mbms-reception-report+xml"][0]
    MBMS_REGISTER_RESPONSE_XML = MIME::Types["application/mbms-register-response+xml"][0]
    MBMS_REGISTER_XML = MIME::Types["application/mbms-register+xml"][0]
    MBMS_USER_SERVICE_DESCRIPTION_XML = MIME::Types["application/mbms-user-service-description+xml"][0]
    MBOX = MIME::Types["application/mbox"][0]
    MEDIA_CONTROL_XML = MIME::Types["application/media_control+xml"][0]
    MEDIASERVERCONTROL_XML = MIME::Types["application/mediaservercontrol+xml"][0]
    MIKEY = MIME::Types["application/mikey"][0]
    MOSS_KEYS = MIME::Types["application/moss-keys"][0]
    MOSS_SIGNATURE = MIME::Types["application/moss-signature"][0]
    MOSSKEY_DATA = MIME::Types["application/mosskey-data"][0]
    MOSSKEY_REQUEST = MIME::Types["application/mosskey-request"][0]
    MPEG4_GENERIC = MIME::Types["application/mpeg4-generic"][0]
    MPEG4_IOD = MIME::Types["application/mpeg4-iod"][0]
    MPEG4_IOD_XMT = MIME::Types["application/mpeg4-iod-xmt"][0]
    MP4 = MIME::Types["application/mp4"][0]
    MSWORD = MIME::Types["application/msword"][0]
    MXF = MIME::Types["application/mxf"][0]
    NASDATA = MIME::Types["application/nasdata"][0]
    NEWS_TRANSMISSION = MIME::Types["application/news-transmission"][0]
    NSS = MIME::Types["application/nss"][0]
    OCSP_REQUEST = MIME::Types["application/ocsp-request"][0]
    OCSP_RESPONSE = MIME::Types["application/ocsp-response"][0]
    OCTET_STREAM = MIME::Types["application/octet-stream"][0]
    ODA = MIME::Types["application/oda"][0]
    OEBPS_PACKAGE_XML = MIME::Types["application/oebps-package+xml"][0]
    OGG = MIME::Types["application/ogg"][0]
    PARITYFEC = MIME::Types["application/parityfec"][0]
    PATCH_OPS_ERROR_XML = MIME::Types["application/patch-ops-error+xml"][0]
    PDF = MIME::Types["application/pdf"][0]
    PGP_ENCRYPTED = MIME::Types["application/pgp-encrypted"][0]
    PGP_KEYS = MIME::Types["application/pgp-keys"][0]
    PGP_SIGNATURE = MIME::Types["application/pgp-signature"][0]
    PIDF_XML = MIME::Types["application/pidf+xml"][0]
    PIDF_DIFF_XML = MIME::Types["application/pidf-diff+xml"][0]
    PKCS10 = MIME::Types["application/pkcs10"][0]
    PKCS7_MIME = MIME::Types["application/pkcs7-mime"][0]
    PKCS7_SIGNATURE = MIME::Types["application/pkcs7-signature"][0]
    PKIX_CERT = MIME::Types["application/pkix-cert"][0]
    PKIXCMP = MIME::Types["application/pkixcmp"][0]
    PKIX_CRL = MIME::Types["application/pkix-crl"][0]
    PKIX_PKIPATH = MIME::Types["application/pkix-pkipath"][0]
    PLS_XML = MIME::Types["application/pls+xml"][0]
    POC_SETTINGS_XML = MIME::Types["application/poc-settings+xml"][0]
    POSTSCRIPT = MIME::Types["application/postscript"][0]
    PRS_ALVESTRAND_TITRAX_SHEET = MIME::Types["application/prs.alvestrand.titrax-sheet"][0]
    PRS_CWW = MIME::Types["application/prs.cww"][0]
    PRS_NPREND = MIME::Types["application/prs.nprend"][0]
    PRS_PLUCKER = MIME::Types["application/prs.plucker"][0]
    RDF_XML = MIME::Types["application/rdf+xml"][0]
    QSIG = MIME::Types["application/qsig"][0]
    REGINFO_XML = MIME::Types["application/reginfo+xml"][0]
    RELAX_NG_COMPACT_SYNTAX = MIME::Types["application/relax-ng-compact-syntax"][0]
    REMOTE_PRINTING = MIME::Types["application/remote-printing"][0]
    RESOURCE_LISTS_DIFF_XML = MIME::Types["application/resource-lists-diff+xml"][0]
    RESOURCE_LISTS_XML = MIME::Types["application/resource-lists+xml"][0]
    RISCOS = MIME::Types["application/riscos"][0]
    RLMI_XML = MIME::Types["application/rlmi+xml"][0]
    RLS_SERVICES_XML = MIME::Types["application/rls-services+xml"][0]
    RTF = MIME::Types["application/rtf"][0]
    RTX = MIME::Types["application/rtx"][0]
    SAMLASSERTION_XML = MIME::Types["application/samlassertion+xml"][0]
    SAMLMETADATA_XML = MIME::Types["application/samlmetadata+xml"][0]
    SBML_XML = MIME::Types["application/sbml+xml"][0]
    SCVP_CV_REQUEST = MIME::Types["application/scvp-cv-request"][0]
    SCVP_CV_RESPONSE = MIME::Types["application/scvp-cv-response"][0]
    SCVP_VP_REQUEST = MIME::Types["application/scvp-vp-request"][0]
    SCVP_VP_RESPONSE = MIME::Types["application/scvp-vp-response"][0]
    SDP = MIME::Types["application/sdp"][0]
    SET_PAYMENT = MIME::Types["application/set-payment"][0]
    SET_PAYMENT_INITIATION = MIME::Types["application/set-payment-initiation"][0]
    SET_REGISTRATION = MIME::Types["application/set-registration"][0]
    SET_REGISTRATION_INITIATION = MIME::Types["application/set-registration-initiation"][0]
    SGML = MIME::Types["application/sgml"][0]
    SGML_OPEN_CATALOG = MIME::Types["application/sgml-open-catalog"][0]
    SHF_XML = MIME::Types["application/shf+xml"][0]
    SIEVE = MIME::Types["application/sieve"][0]
    SIMPLE_FILTER_XML = MIME::Types["application/simple-filter+xml"][0]
    SIMPLE_MESSAGE_SUMMARY = MIME::Types["application/simple-message-summary"][0]
     SIMPLESYMBOLCONTAINER = MIME::Types["application/ simpleSymbolContainer"][0]
    SLATE = MIME::Types["application/slate"][0]
    SMIL = MIME::Types["application/smil"][0]
    SMIL_XML = MIME::Types["application/smil+xml"][0]
    SOAP_FASTINFOSET = MIME::Types["application/soap+fastinfoset"][0]
    SOAP_XML = MIME::Types["application/soap+xml"][0]
    SPARQL_QUERY = MIME::Types["application/sparql-query"][0]
    SPARQL_RESULTS_XML = MIME::Types["application/sparql-results+xml"][0]
    SPIRITS_EVENT_XML = MIME::Types["application/spirits-event+xml"][0]
    SRGS = MIME::Types["application/srgs"][0]
    SRGS_XML = MIME::Types["application/srgs+xml"][0]
    SSML_XML = MIME::Types["application/ssml+xml"][0]
    TIMESTAMP_QUERY = MIME::Types["application/timestamp-query"][0]
    TIMESTAMP_REPLY = MIME::Types["application/timestamp-reply"][0]
    TVE_TRIGGER = MIME::Types["application/tve-trigger"][0]
    ULPFEC = MIME::Types["application/ulpfec"][0]
    VEMMI = MIME::Types["application/vemmi"][0]
    VND_3GPP_BSF_XML = MIME::Types["application/vnd.3gpp.bsf+xml"][0]
    VND_3GPP_PIC_BW_LARGE = MIME::Types["application/vnd.3gpp.pic-bw-large"][0]
    VND_3GPP_PIC_BW_SMALL = MIME::Types["application/vnd.3gpp.pic-bw-small"][0]
    VND_3GPP_PIC_BW_VAR = MIME::Types["application/vnd.3gpp.pic-bw-var"][0]
    VND_3GPP_SMS = MIME::Types["application/vnd.3gpp.sms"][0]
    VND_3GPP2_BCMCSINFO_XML = MIME::Types["application/vnd.3gpp2.bcmcsinfo+xml"][0]
    VND_3GPP2_SMS = MIME::Types["application/vnd.3gpp2.sms"][0]
    VND_3GPP2_TCAP = MIME::Types["application/vnd.3gpp2.tcap"][0]
    VND_3M_POST_IT_NOTES = MIME::Types["application/vnd.3M.Post-it-Notes"][0]
    VND_ACCPAC_SIMPLY_ASO = MIME::Types["application/vnd.accpac.simply.aso"][0]
    VND_ACCPAC_SIMPLY_IMP = MIME::Types["application/vnd.accpac.simply.imp"][0]
    VND_ACUCOBOL = MIME::Types["application/vnd.acucobol"][0]
    VND_ACUCORP = MIME::Types["application/vnd.acucorp"][0]
    VND_ADOBE_XDP_XML = MIME::Types["application/vnd.adobe.xdp+xml"][0]
    VND_ADOBE_XFDF = MIME::Types["application/vnd.adobe.xfdf"][0]
    VND_AETHER_IMP = MIME::Types["application/vnd.aether.imp"][0]
    VND_AMERICANDYNAMICS_ACC = MIME::Types["application/vnd.americandynamics.acc"][0]
    VND_AMIGA_AMI = MIME::Types["application/vnd.amiga.ami"][0]
    VND_ANSER_WEB_CERTIFICATE_ISSUE_INITIATION = MIME::Types["application/vnd.anser-web-certificate-issue-initiation"][0]
    VND_ANTIX_GAME_COMPONENT = MIME::Types["application/vnd.antix.game-component"][0]
    VND_APPLE_INSTALLER_XML = MIME::Types["application/vnd.apple.installer+xml"][0]
    VND_ARASTRA_SWI = MIME::Types["application/vnd.arastra.swi"][0]
    VND_AUDIOGRAPH = MIME::Types["application/vnd.audiograph"][0]
    VND_AUTOPACKAGE = MIME::Types["application/vnd.autopackage"][0]
    VND_AVISTAR_XML = MIME::Types["application/vnd.avistar+xml"][0]
    VND_BLUEICE_MULTIPASS = MIME::Types["application/vnd.blueice.multipass"][0]
    VND_BMI = MIME::Types["application/vnd.bmi"][0]
    VND_BUSINESSOBJECTS = MIME::Types["application/vnd.businessobjects"][0]
    VND_CAB_JSCRIPT = MIME::Types["application/vnd.cab-jscript"][0]
    VND_CANON_CPDL = MIME::Types["application/vnd.canon-cpdl"][0]
    VND_CANON_LIPS = MIME::Types["application/vnd.canon-lips"][0]
    VND_CENDIO_THINLINC_CLIENTCONF = MIME::Types["application/vnd.cendio.thinlinc.clientconf"][0]
    VND_CHEMDRAW_XML = MIME::Types["application/vnd.chemdraw+xml"][0]
    VND_CHIPNUTS_KARAOKE_MMD = MIME::Types["application/vnd.chipnuts.karaoke-mmd"][0]
    VND_CINDERELLA = MIME::Types["application/vnd.cinderella"][0]
    VND_CIRPACK_ISDN_EXT = MIME::Types["application/vnd.cirpack.isdn-ext"][0]
    VND_CLAYMORE = MIME::Types["application/vnd.claymore"][0]
    VND_CLONK_C4GROUP = MIME::Types["application/vnd.clonk.c4group"][0]
    VND_COMMERCE_BATTELLE = MIME::Types["application/vnd.commerce-battelle"][0]
    VND_COMMONSPACE = MIME::Types["application/vnd.commonspace"][0]
    VND_COSMOCALLER = MIME::Types["application/vnd.cosmocaller"][0]
    VND_CONTACT_CMSG = MIME::Types["application/vnd.contact.cmsg"][0]
    VND_CRICK_CLICKER = MIME::Types["application/vnd.crick.clicker"][0]
    VND_CRICK_CLICKER_KEYBOARD = MIME::Types["application/vnd.crick.clicker.keyboard"][0]
    VND_CRICK_CLICKER_PALETTE = MIME::Types["application/vnd.crick.clicker.palette"][0]
    VND_CRICK_CLICKER_TEMPLATE = MIME::Types["application/vnd.crick.clicker.template"][0]
    VND_CRICK_CLICKER_WORDBANK = MIME::Types["application/vnd.crick.clicker.wordbank"][0]
    VND_CRITICALTOOLS_WBS_XML = MIME::Types["application/vnd.criticaltools.wbs+xml"][0]
    VND_CTC_POSML = MIME::Types["application/vnd.ctc-posml"][0]
    VND_CTCT_WS_XML = MIME::Types["application/vnd.ctct.ws+xml"][0]
    VND_CUPS_PDF = MIME::Types["application/vnd.cups-pdf"][0]
    VND_CUPS_POSTSCRIPT = MIME::Types["application/vnd.cups-postscript"][0]
    VND_CUPS_PPD = MIME::Types["application/vnd.cups-ppd"][0]
    VND_CUPS_RASTER = MIME::Types["application/vnd.cups-raster"][0]
    VND_CUPS_RAW = MIME::Types["application/vnd.cups-raw"][0]
    VND_CURL = MIME::Types["application/vnd.curl"][0]
    VND_CYBANK = MIME::Types["application/vnd.cybank"][0]
    VND_DATA_VISION_RDZ = MIME::Types["application/vnd.data-vision.rdz"][0]
    VND_DENOVO_FCSELAYOUT_LINK = MIME::Types["application/vnd.denovo.fcselayout-link"][0]
    VND_DNA = MIME::Types["application/vnd.dna"][0]
    VND_DPGRAPH = MIME::Types["application/vnd.dpgraph"][0]
    VND_DREAMFACTORY = MIME::Types["application/vnd.dreamfactory"][0]
    VND_DVB_ESGCONTAINER = MIME::Types["application/vnd.dvb.esgcontainer"][0]
    VND_DVB_IPDCESGACCESS = MIME::Types["application/vnd.dvb.ipdcesgaccess"][0]
    VND_DVB_IPTV_ALFEC_BASE = MIME::Types["application/vnd.dvb.iptv.alfec-base"][0]
    VND_DVB_IPTV_ALFEC_ENHANCEMENT = MIME::Types["application/vnd.dvb.iptv.alfec-enhancement"][0]
    VND_DXR = MIME::Types["application/vnd.dxr"][0]
    VND_ECDIS_UPDATE = MIME::Types["application/vnd.ecdis-update"][0]
    VND_ECOWIN_CHART = MIME::Types["application/vnd.ecowin.chart"][0]
    VND_ECOWIN_FILEREQUEST = MIME::Types["application/vnd.ecowin.filerequest"][0]
    VND_ECOWIN_FILEUPDATE = MIME::Types["application/vnd.ecowin.fileupdate"][0]
    VND_ECOWIN_SERIES = MIME::Types["application/vnd.ecowin.series"][0]
    VND_ECOWIN_SERIESREQUEST = MIME::Types["application/vnd.ecowin.seriesrequest"][0]
    VND_ECOWIN_SERIESUPDATE = MIME::Types["application/vnd.ecowin.seriesupdate"][0]
    VND_ENLIVEN = MIME::Types["application/vnd.enliven"][0]
    VND_EPSON_ESF = MIME::Types["application/vnd.epson.esf"][0]
    VND_EPSON_MSF = MIME::Types["application/vnd.epson.msf"][0]
    VND_EPSON_QUICKANIME = MIME::Types["application/vnd.epson.quickanime"][0]
    VND_EPSON_SALT = MIME::Types["application/vnd.epson.salt"][0]
    VND_EPSON_SSF = MIME::Types["application/vnd.epson.ssf"][0]
    VND_ERICSSON_QUICKCALL = MIME::Types["application/vnd.ericsson.quickcall"][0]
    VND_ESZIGNO3_XML = MIME::Types["application/vnd.eszigno3+xml"][0]
    VND_EUDORA_DATA = MIME::Types["application/vnd.eudora.data"][0]
    VND_EZPIX_ALBUM = MIME::Types["application/vnd.ezpix-album"][0]
    VND_EZPIX_PACKAGE = MIME::Types["application/vnd.ezpix-package"][0]
    VND_F_SECURE_MOBILE = MIME::Types["application/vnd.f-secure.mobile"][0]
    VND_FDF = MIME::Types["application/vnd.fdf"][0]
    VND_FFSNS = MIME::Types["application/vnd.ffsns"][0]
    VND_FINTS = MIME::Types["application/vnd.fints"][0]
    VND_FLOGRAPHIT = MIME::Types["application/vnd.FloGraphIt"][0]
    VND_FLUXTIME_CLIP = MIME::Types["application/vnd.fluxtime.clip"][0]
    VND_FONT_FONTFORGE_SFD = MIME::Types["application/vnd.font-fontforge-sfd"][0]
    VND_FRAMEMAKER = MIME::Types["application/vnd.framemaker"][0]
    VND_FROGANS_FNC = MIME::Types["application/vnd.frogans.fnc"][0]
    VND_FROGANS_LTF = MIME::Types["application/vnd.frogans.ltf"][0]
    VND_FSC_WEBLAUNCH = MIME::Types["application/vnd.fsc.weblaunch"][0]
    VND_FUJITSU_OASYS = MIME::Types["application/vnd.fujitsu.oasys"][0]
    VND_FUJITSU_OASYS2 = MIME::Types["application/vnd.fujitsu.oasys2"][0]
    VND_FUJITSU_OASYS3 = MIME::Types["application/vnd.fujitsu.oasys3"][0]
    VND_FUJITSU_OASYSGP = MIME::Types["application/vnd.fujitsu.oasysgp"][0]
    VND_FUJITSU_OASYSPRS = MIME::Types["application/vnd.fujitsu.oasysprs"][0]
    VND_FUJIXEROX_ART4 = MIME::Types["application/vnd.fujixerox.ART4"][0]
    VND_FUJIXEROX_ART_EX = MIME::Types["application/vnd.fujixerox.ART-EX"][0]
    VND_FUJIXEROX_DDD = MIME::Types["application/vnd.fujixerox.ddd"][0]
    VND_FUJIXEROX_DOCUWORKS = MIME::Types["application/vnd.fujixerox.docuworks"][0]
    VND_FUJIXEROX_DOCUWORKS_BINDER = MIME::Types["application/vnd.fujixerox.docuworks.binder"][0]
    VND_FUJIXEROX_HBPL = MIME::Types["application/vnd.fujixerox.HBPL"][0]
    VND_FUT_MISNET = MIME::Types["application/vnd.fut-misnet"][0]
    VND_FUZZYSHEET = MIME::Types["application/vnd.fuzzysheet"][0]
    VND_GENOMATIX_TUXEDO = MIME::Types["application/vnd.genomatix.tuxedo"][0]
    VND_GMX = MIME::Types["application/vnd.gmx"][0]
    VND_GOOGLE_EARTH_KML_XML = MIME::Types["application/vnd.google-earth.kml+xml"][0]
    VND_GOOGLE_EARTH_KMZ = MIME::Types["application/vnd.google-earth.kmz"][0]
    VND_GRAFEQ = MIME::Types["application/vnd.grafeq"][0]
    VND_GRIDMP = MIME::Types["application/vnd.gridmp"][0]
    VND_GROOVE_ACCOUNT = MIME::Types["application/vnd.groove-account"][0]
    VND_GROOVE_HELP = MIME::Types["application/vnd.groove-help"][0]
    VND_GROOVE_IDENTITY_MESSAGE = MIME::Types["application/vnd.groove-identity-message"][0]
    VND_GROOVE_INJECTOR = MIME::Types["application/vnd.groove-injector"][0]
    VND_GROOVE_TOOL_MESSAGE = MIME::Types["application/vnd.groove-tool-message"][0]
    VND_GROOVE_TOOL_TEMPLATE = MIME::Types["application/vnd.groove-tool-template"][0]
    VND_GROOVE_VCARD = MIME::Types["application/vnd.groove-vcard"][0]
    VND_HANDHELD_ENTERTAINMENT_XML = MIME::Types["application/vnd.HandHeld-Entertainment+xml"][0]
    VND_HBCI = MIME::Types["application/vnd.hbci"][0]
    VND_HCL_BIREPORTS = MIME::Types["application/vnd.hcl-bireports"][0]
    VND_HHE_LESSON_PLAYER = MIME::Types["application/vnd.hhe.lesson-player"][0]
    VND_HP_HPGL = MIME::Types["application/vnd.hp-HPGL"][0]
    VND_HP_HPID = MIME::Types["application/vnd.hp-hpid"][0]
    VND_HP_HPS = MIME::Types["application/vnd.hp-hps"][0]
    VND_HP_JLYT = MIME::Types["application/vnd.hp-jlyt"][0]
    VND_HP_PCL = MIME::Types["application/vnd.hp-PCL"][0]
    VND_HP_PCLXL = MIME::Types["application/vnd.hp-PCLXL"][0]
    VND_HTTPHONE = MIME::Types["application/vnd.httphone"][0]
    VND_HYDROSTATIX_SOF_DATA = MIME::Types["application/vnd.hydrostatix.sof-data"][0]
    VND_HZN_3D_CROSSWORD = MIME::Types["application/vnd.hzn-3d-crossword"][0]
    VND_IBM_AFPLINEDATA = MIME::Types["application/vnd.ibm.afplinedata"][0]
    VND_IBM_ELECTRONIC_MEDIA = MIME::Types["application/vnd.ibm.electronic-media"][0]
    VND_IBM_MINIPAY = MIME::Types["application/vnd.ibm.MiniPay"][0]
    VND_IBM_MODCAP = MIME::Types["application/vnd.ibm.modcap"][0]
    VND_IBM_RIGHTS_MANAGEMENT = MIME::Types["application/vnd.ibm.rights-management"][0]
    VND_IBM_SECURE_CONTAINER = MIME::Types["application/vnd.ibm.secure-container"][0]
    VND_ICCPROFILE = MIME::Types["application/vnd.iccprofile"][0]
    VND_IGLOADER = MIME::Types["application/vnd.igloader"][0]
    VND_IMMERVISION_IVP = MIME::Types["application/vnd.immervision-ivp"][0]
    VND_IMMERVISION_IVU = MIME::Types["application/vnd.immervision-ivu"][0]
    VND_INFORMEDCONTROL_RMS_XML = MIME::Types["application/vnd.informedcontrol.rms+xml"][0]
    VND_INFORMIX_VISIONARY = MIME::Types["application/vnd.informix-visionary"][0]
    VND_INTERCON_FORMNET = MIME::Types["application/vnd.intercon.formnet"][0]
    VND_INTERTRUST_DIGIBOX = MIME::Types["application/vnd.intertrust.digibox"][0]
    VND_INTERTRUST_NNCP = MIME::Types["application/vnd.intertrust.nncp"][0]
    VND_INTU_QBO = MIME::Types["application/vnd.intu.qbo"][0]
    VND_INTU_QFX = MIME::Types["application/vnd.intu.qfx"][0]
    VND_IPTC_G2_CONCEPTITEM_XML = MIME::Types["application/vnd.iptc.g2.conceptitem+xml"][0]
    VND_IPTC_G2_KNOWLEDGEITEM_XML = MIME::Types["application/vnd.iptc.g2.knowledgeitem+xml"][0]
    VND_IPTC_G2_NEWSITEM_XML = MIME::Types["application/vnd.iptc.g2.newsitem+xml"][0]
    VND_IPTC_G2_PACKAGEITEM_XML = MIME::Types["application/vnd.iptc.g2.packageitem+xml"][0]
    VND_IPUNPLUGGED_RCPROFILE = MIME::Types["application/vnd.ipunplugged.rcprofile"][0]
    VND_IREPOSITORY_PACKAGE_XML = MIME::Types["application/vnd.irepository.package+xml"][0]
    VND_IS_XPR = MIME::Types["application/vnd.is-xpr"][0]
    VND_JAM = MIME::Types["application/vnd.jam"][0]
    VND_JAPANNET_DIRECTORY_SERVICE = MIME::Types["application/vnd.japannet-directory-service"][0]
    VND_JAPANNET_JPNSTORE_WAKEUP = MIME::Types["application/vnd.japannet-jpnstore-wakeup"][0]
    VND_JAPANNET_PAYMENT_WAKEUP = MIME::Types["application/vnd.japannet-payment-wakeup"][0]
    VND_JAPANNET_REGISTRATION = MIME::Types["application/vnd.japannet-registration"][0]
    VND_JAPANNET_REGISTRATION_WAKEUP = MIME::Types["application/vnd.japannet-registration-wakeup"][0]
    VND_JAPANNET_SETSTORE_WAKEUP = MIME::Types["application/vnd.japannet-setstore-wakeup"][0]
    VND_JAPANNET_VERIFICATION = MIME::Types["application/vnd.japannet-verification"][0]
    VND_JAPANNET_VERIFICATION_WAKEUP = MIME::Types["application/vnd.japannet-verification-wakeup"][0]
    VND_JCP_JAVAME_MIDLET_RMS = MIME::Types["application/vnd.jcp.javame.midlet-rms"][0]
    VND_JISP = MIME::Types["application/vnd.jisp"][0]
    VND_JOOST_JODA_ARCHIVE = MIME::Types["application/vnd.joost.joda-archive"][0]
    VND_KAHOOTZ = MIME::Types["application/vnd.kahootz"][0]
    VND_KDE_KARBON = MIME::Types["application/vnd.kde.karbon"][0]
    VND_KDE_KCHART = MIME::Types["application/vnd.kde.kchart"][0]
    VND_KDE_KFORMULA = MIME::Types["application/vnd.kde.kformula"][0]
    VND_KDE_KIVIO = MIME::Types["application/vnd.kde.kivio"][0]
    VND_KDE_KONTOUR = MIME::Types["application/vnd.kde.kontour"][0]
    VND_KDE_KPRESENTER = MIME::Types["application/vnd.kde.kpresenter"][0]
    VND_KDE_KSPREAD = MIME::Types["application/vnd.kde.kspread"][0]
    VND_KDE_KWORD = MIME::Types["application/vnd.kde.kword"][0]
    VND_KENAMEAAPP = MIME::Types["application/vnd.kenameaapp"][0]
    VND_KIDSPIRATION = MIME::Types["application/vnd.kidspiration"][0]
    VND_KINAR = MIME::Types["application/vnd.Kinar"][0]
    VND_KOAN = MIME::Types["application/vnd.koan"][0]
    VND_KODAK_DESCRIPTOR = MIME::Types["application/vnd.kodak-descriptor"][0]
    VND_LIBERTY_REQUEST_XML = MIME::Types["application/vnd.liberty-request+xml"][0]
    VND_LLAMAGRAPHICS_LIFE_BALANCE_DESKTOP = MIME::Types["application/vnd.llamagraphics.life-balance.desktop"][0]
    VND_LLAMAGRAPHICS_LIFE_BALANCE_EXCHANGE_XML = MIME::Types["application/vnd.llamagraphics.life-balance.exchange+xml"][0]
    VND_LOTUS_1_2_3 = MIME::Types["application/vnd.lotus-1-2-3"][0]
    VND_LOTUS_APPROACH = MIME::Types["application/vnd.lotus-approach"][0]
    VND_LOTUS_FREELANCE = MIME::Types["application/vnd.lotus-freelance"][0]
    VND_LOTUS_NOTES = MIME::Types["application/vnd.lotus-notes"][0]
    VND_LOTUS_ORGANIZER = MIME::Types["application/vnd.lotus-organizer"][0]
    VND_LOTUS_SCREENCAM = MIME::Types["application/vnd.lotus-screencam"][0]
    VND_LOTUS_WORDPRO = MIME::Types["application/vnd.lotus-wordpro"][0]
    VND_MACPORTS_PORTPKG = MIME::Types["application/vnd.macports.portpkg"][0]
    VND_MARLIN_DRM_ACTIONTOKEN_XML = MIME::Types["application/vnd.marlin.drm.actiontoken+xml"][0]
    VND_MARLIN_DRM_CONFTOKEN_XML = MIME::Types["application/vnd.marlin.drm.conftoken+xml"][0]
    VND_MARLIN_DRM_LICENSE_XML = MIME::Types["application/vnd.marlin.drm.license+xml"][0]
    VND_MARLIN_DRM_MDCF = MIME::Types["application/vnd.marlin.drm.mdcf"][0]
    VND_MCD = MIME::Types["application/vnd.mcd"][0]
    VND_MEDCALCDATA = MIME::Types["application/vnd.medcalcdata"][0]
    VND_MEDIASTATION_CDKEY = MIME::Types["application/vnd.mediastation.cdkey"][0]
    VND_MERIDIAN_SLINGSHOT = MIME::Types["application/vnd.meridian-slingshot"][0]
    VND_MFER = MIME::Types["application/vnd.MFER"][0]
    VND_MFMP = MIME::Types["application/vnd.mfmp"][0]
    VND_MICROGRAFX_FLO = MIME::Types["application/vnd.micrografx.flo"][0]
    VND_MICROGRAFX_IGX = MIME::Types["application/vnd.micrografx.igx"][0]
    VND_MIF = MIME::Types["application/vnd.mif"][0]
    VND_MINISOFT_HP3000_SAVE = MIME::Types["application/vnd.minisoft-hp3000-save"][0]
    VND_MITSUBISHI_MISTY_GUARD_TRUSTWEB = MIME::Types["application/vnd.mitsubishi.misty-guard.trustweb"][0]
    VND_MOBIUS_DAF = MIME::Types["application/vnd.Mobius.DAF"][0]
    VND_MOBIUS_DIS = MIME::Types["application/vnd.Mobius.DIS"][0]
    VND_MOBIUS_MBK = MIME::Types["application/vnd.Mobius.MBK"][0]
    VND_MOBIUS_MQY = MIME::Types["application/vnd.Mobius.MQY"][0]
    VND_MOBIUS_MSL = MIME::Types["application/vnd.Mobius.MSL"][0]
    VND_MOBIUS_PLC = MIME::Types["application/vnd.Mobius.PLC"][0]
    VND_MOBIUS_TXF = MIME::Types["application/vnd.Mobius.TXF"][0]
    VND_MOPHUN_APPLICATION = MIME::Types["application/vnd.mophun.application"][0]
    VND_MOPHUN_CERTIFICATE = MIME::Types["application/vnd.mophun.certificate"][0]
    VND_MOTOROLA_FLEXSUITE = MIME::Types["application/vnd.motorola.flexsuite"][0]
    VND_MOTOROLA_FLEXSUITE_ADSI = MIME::Types["application/vnd.motorola.flexsuite.adsi"][0]
    VND_MOTOROLA_FLEXSUITE_FIS = MIME::Types["application/vnd.motorola.flexsuite.fis"][0]
    VND_MOTOROLA_FLEXSUITE_GOTAP = MIME::Types["application/vnd.motorola.flexsuite.gotap"][0]
    VND_MOTOROLA_FLEXSUITE_KMR = MIME::Types["application/vnd.motorola.flexsuite.kmr"][0]
    VND_MOTOROLA_FLEXSUITE_TTC = MIME::Types["application/vnd.motorola.flexsuite.ttc"][0]
    VND_MOTOROLA_FLEXSUITE_WEM = MIME::Types["application/vnd.motorola.flexsuite.wem"][0]
    VND_MOTOROLA_IPRM = MIME::Types["application/vnd.motorola.iprm"][0]
    VND_MOZILLA_XUL_XML = MIME::Types["application/vnd.mozilla.xul+xml"][0]
    VND_MS_ARTGALRY = MIME::Types["application/vnd.ms-artgalry"][0]
    VND_MS_ASF = MIME::Types["application/vnd.ms-asf"][0]
    VND_MS_CAB_COMPRESSED = MIME::Types["application/vnd.ms-cab-compressed"][0]
    VND_MSEQ = MIME::Types["application/vnd.mseq"][0]
    VND_MS_EXCEL = MIME::Types["application/vnd.ms-excel"][0]
    VND_MS_FONTOBJECT = MIME::Types["application/vnd.ms-fontobject"][0]
    VND_MS_HTMLHELP = MIME::Types["application/vnd.ms-htmlhelp"][0]
    VND_MSIGN = MIME::Types["application/vnd.msign"][0]
    VND_MS_IMS = MIME::Types["application/vnd.ms-ims"][0]
    VND_MS_LRM = MIME::Types["application/vnd.ms-lrm"][0]
    VND_MS_PLAYREADY_INITIATOR_XML = MIME::Types["application/vnd.ms-playready.initiator+xml"][0]
    VND_MS_POWERPOINT = MIME::Types["application/vnd.ms-powerpoint"][0]
    VND_MS_PROJECT = MIME::Types["application/vnd.ms-project"][0]
    VND_MS_TNEF = MIME::Types["application/vnd.ms-tnef"][0]
    VND_MS_WMDRM_LIC_CHLG_REQ = MIME::Types["application/vnd.ms-wmdrm.lic-chlg-req"][0]
    VND_MS_WMDRM_LIC_RESP = MIME::Types["application/vnd.ms-wmdrm.lic-resp"][0]
    VND_MS_WMDRM_METER_CHLG_REQ = MIME::Types["application/vnd.ms-wmdrm.meter-chlg-req"][0]
    VND_MS_WMDRM_METER_RESP = MIME::Types["application/vnd.ms-wmdrm.meter-resp"][0]
    VND_MS_WORKS = MIME::Types["application/vnd.ms-works"][0]
    VND_MS_WPL = MIME::Types["application/vnd.ms-wpl"][0]
    VND_MS_XPSDOCUMENT = MIME::Types["application/vnd.ms-xpsdocument"][0]
    VND_MULTIAD_CREATOR = MIME::Types["application/vnd.multiad.creator"][0]
    VND_MULTIAD_CREATOR_CIF = MIME::Types["application/vnd.multiad.creator.cif"][0]
    VND_MUSICIAN = MIME::Types["application/vnd.musician"][0]
    VND_MUSIC_NIFF = MIME::Types["application/vnd.music-niff"][0]
    VND_MUVEE_STYLE = MIME::Types["application/vnd.muvee.style"][0]
    VND_NCD_CONTROL = MIME::Types["application/vnd.ncd.control"][0]
    VND_NCD_REFERENCE = MIME::Types["application/vnd.ncd.reference"][0]
    VND_NERVANA = MIME::Types["application/vnd.nervana"][0]
    VND_NETFPX = MIME::Types["application/vnd.netfpx"][0]
    VND_NEUROLANGUAGE_NLU = MIME::Types["application/vnd.neurolanguage.nlu"][0]
    VND_NOBLENET_DIRECTORY = MIME::Types["application/vnd.noblenet-directory"][0]
    VND_NOBLENET_SEALER = MIME::Types["application/vnd.noblenet-sealer"][0]
    VND_NOBLENET_WEB = MIME::Types["application/vnd.noblenet-web"][0]
    VND_NOKIA_CATALOGS = MIME::Types["application/vnd.nokia.catalogs"][0]
    VND_NOKIA_CONML_WBXML = MIME::Types["application/vnd.nokia.conml+wbxml"][0]
    VND_NOKIA_CONML_XML = MIME::Types["application/vnd.nokia.conml+xml"][0]
    VND_NOKIA_IPTV_CONFIG_XML = MIME::Types["application/vnd.nokia.iptv.config+xml"][0]
    VND_NOKIA_ISDS_RADIO_PRESETS = MIME::Types["application/vnd.nokia.iSDS-radio-presets"][0]
    VND_NOKIA_LANDMARK_WBXML = MIME::Types["application/vnd.nokia.landmark+wbxml"][0]
    VND_NOKIA_LANDMARK_XML = MIME::Types["application/vnd.nokia.landmark+xml"][0]
    VND_NOKIA_LANDMARKCOLLECTION_XML = MIME::Types["application/vnd.nokia.landmarkcollection+xml"][0]
    VND_NOKIA_NCD = MIME::Types["application/vnd.nokia.ncd"][0]
    VND_NOKIA_N_GAGE_AC_XML = MIME::Types["application/vnd.nokia.n-gage.ac+xml"][0]
    VND_NOKIA_N_GAGE_DATA = MIME::Types["application/vnd.nokia.n-gage.data"][0]
    VND_NOKIA_N_GAGE_SYMBIAN_INSTALL = MIME::Types["application/vnd.nokia.n-gage.symbian.install"][0]
    VND_NOKIA_PCD_WBXML = MIME::Types["application/vnd.nokia.pcd+wbxml"][0]
    VND_NOKIA_PCD_XML = MIME::Types["application/vnd.nokia.pcd+xml"][0]
    VND_NOKIA_RADIO_PRESET = MIME::Types["application/vnd.nokia.radio-preset"][0]
    VND_NOKIA_RADIO_PRESETS = MIME::Types["application/vnd.nokia.radio-presets"][0]
    VND_NOVADIGM_EDM = MIME::Types["application/vnd.novadigm.EDM"][0]
    VND_NOVADIGM_EDX = MIME::Types["application/vnd.novadigm.EDX"][0]
    VND_NOVADIGM_EXT = MIME::Types["application/vnd.novadigm.EXT"][0]
    VND_OASIS_OPENDOCUMENT_CHART = MIME::Types["application/vnd.oasis.opendocument.chart"][0]
    VND_OASIS_OPENDOCUMENT_CHART_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.chart-template"][0]
    VND_OASIS_OPENDOCUMENT_FORMULA = MIME::Types["application/vnd.oasis.opendocument.formula"][0]
    VND_OASIS_OPENDOCUMENT_FORMULA_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.formula-template"][0]
    VND_OASIS_OPENDOCUMENT_GRAPHICS = MIME::Types["application/vnd.oasis.opendocument.graphics"][0]
    VND_OASIS_OPENDOCUMENT_GRAPHICS_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.graphics-template"][0]
    VND_OASIS_OPENDOCUMENT_IMAGE = MIME::Types["application/vnd.oasis.opendocument.image"][0]
    VND_OASIS_OPENDOCUMENT_IMAGE_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.image-template"][0]
    VND_OASIS_OPENDOCUMENT_PRESENTATION = MIME::Types["application/vnd.oasis.opendocument.presentation"][0]
    VND_OASIS_OPENDOCUMENT_PRESENTATION_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.presentation-template"][0]
    VND_OASIS_OPENDOCUMENT_SPREADSHEET = MIME::Types["application/vnd.oasis.opendocument.spreadsheet"][0]
    VND_OASIS_OPENDOCUMENT_SPREADSHEET_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.spreadsheet-template"][0]
    VND_OASIS_OPENDOCUMENT_TEXT = MIME::Types["application/vnd.oasis.opendocument.text"][0]
    VND_OASIS_OPENDOCUMENT_TEXT_MASTER = MIME::Types["application/vnd.oasis.opendocument.text-master"][0]
    VND_OASIS_OPENDOCUMENT_TEXT_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.text-template"][0]
    VND_OASIS_OPENDOCUMENT_TEXT_WEB = MIME::Types["application/vnd.oasis.opendocument.text-web"][0]
    VND_OBN = MIME::Types["application/vnd.obn"][0]
    VND_OLPC_SUGAR = MIME::Types["application/vnd.olpc-sugar"][0]
    VND_OMA_BCAST_ASSOCIATED_PROCEDURE_PARAMETER_XML = MIME::Types["application/vnd.oma.bcast.associated-procedure-parameter+xml"][0]
    VND_OMA_BCAST_DRM_TRIGGER_XML = MIME::Types["application/vnd.oma.bcast.drm-trigger+xml"][0]
    VND_OMA_BCAST_IMD_XML = MIME::Types["application/vnd.oma.bcast.imd+xml"][0]
    VND_OMA_BCAST_LTKM = MIME::Types["application/vnd.oma.bcast.ltkm"][0]
    VND_OMA_BCAST_NOTIFICATION_XML = MIME::Types["application/vnd.oma.bcast.notification+xml"][0]
    VND_OMA_BCAST_PROVISIONINGTRIGGER = MIME::Types["application/vnd.oma.bcast.provisioningtrigger"][0]
    VND_OMA_BCAST_SGBOOT = MIME::Types["application/vnd.oma.bcast.sgboot"][0]
    VND_OMA_BCAST_SGDD_XML = MIME::Types["application/vnd.oma.bcast.sgdd+xml"][0]
    VND_OMA_BCAST_SGDU = MIME::Types["application/vnd.oma.bcast.sgdu"][0]
    VND_OMA_BCAST_SIMPLE_SYMBOL_CONTAINER = MIME::Types["application/vnd.oma.bcast.simple-symbol-container"][0]
    VND_OMA_BCAST_SMARTCARD_TRIGGER_XML = MIME::Types["application/vnd.oma.bcast.smartcard-trigger+xml"][0]
    VND_OMA_BCAST_SPROV_XML = MIME::Types["application/vnd.oma.bcast.sprov+xml"][0]
    VND_OMA_BCAST_STKM = MIME::Types["application/vnd.oma.bcast.stkm"][0]
    VND_OMA_DCD = MIME::Types["application/vnd.oma.dcd"][0]
    VND_OMA_DCDC = MIME::Types["application/vnd.oma.dcdc"][0]
    VND_OMA_DD2_XML = MIME::Types["application/vnd.oma.dd2+xml"][0]
    VND_OMA_DRM_RISD_XML = MIME::Types["application/vnd.oma.drm.risd+xml"][0]
    VND_OMA_GROUP_USAGE_LIST_XML = MIME::Types["application/vnd.oma.group-usage-list+xml"][0]
    VND_OMA_POC_DETAILED_PROGRESS_REPORT_XML = MIME::Types["application/vnd.oma.poc.detailed-progress-report+xml"][0]
    VND_OMA_POC_FINAL_REPORT_XML = MIME::Types["application/vnd.oma.poc.final-report+xml"][0]
    VND_OMA_POC_GROUPS_XML = MIME::Types["application/vnd.oma.poc.groups+xml"][0]
    VND_OMA_POC_INVOCATION_DESCRIPTOR_XML = MIME::Types["application/vnd.oma.poc.invocation-descriptor+xml"][0]
    VND_OMA_POC_OPTIMIZED_PROGRESS_REPORT_XML = MIME::Types["application/vnd.oma.poc.optimized-progress-report+xml"][0]
    VND_OMA_XCAP_DIRECTORY_XML = MIME::Types["application/vnd.oma.xcap-directory+xml"][0]
    VND_OMADS_EMAIL_XML = MIME::Types["application/vnd.omads-email+xml"][0]
    VND_OMADS_FILE_XML = MIME::Types["application/vnd.omads-file+xml"][0]
    VND_OMADS_FOLDER_XML = MIME::Types["application/vnd.omads-folder+xml"][0]
    VND_OMALOC_SUPL_INIT = MIME::Types["application/vnd.omaloc-supl-init"][0]
    VND_OMA_SCWS_CONFIG = MIME::Types["application/vnd.oma-scws-config"][0]
    VND_OMA_SCWS_HTTP_REQUEST = MIME::Types["application/vnd.oma-scws-http-request"][0]
    VND_OMA_SCWS_HTTP_RESPONSE = MIME::Types["application/vnd.oma-scws-http-response"][0]
    VND_OPENOFFICEORG_EXTENSION = MIME::Types["application/vnd.openofficeorg.extension"][0]
    VND_OSA_NETDEPLOY = MIME::Types["application/vnd.osa.netdeploy"][0]
    VND_OSGI_BUNDLE = MIME::Types["application/vnd.osgi.bundle"][0]
    VND_OSGI_DP = MIME::Types["application/vnd.osgi.dp"][0]
    VND_OTPS_CT_KIP_XML = MIME::Types["application/vnd.otps.ct-kip+xml"][0]
    VND_PALM = MIME::Types["application/vnd.palm"][0]
    VND_PAOS_XML = MIME::Types["application/vnd.paos.xml"][0]
    VND_PG_FORMAT = MIME::Types["application/vnd.pg.format"][0]
    VND_PG_OSASLI = MIME::Types["application/vnd.pg.osasli"][0]
    VND_PIACCESS_APPLICATION_LICENCE = MIME::Types["application/vnd.piaccess.application-licence"][0]
    VND_PICSEL = MIME::Types["application/vnd.picsel"][0]
    VND_POC_GROUP_ADVERTISEMENT_XML = MIME::Types["application/vnd.poc.group-advertisement+xml"][0]
    VND_POCKETLEARN = MIME::Types["application/vnd.pocketlearn"][0]
    VND_POWERBUILDER6 = MIME::Types["application/vnd.powerbuilder6"][0]
    VND_POWERBUILDER6_S = MIME::Types["application/vnd.powerbuilder6-s"][0]
    VND_POWERBUILDER7 = MIME::Types["application/vnd.powerbuilder7"][0]
    VND_POWERBUILDER75 = MIME::Types["application/vnd.powerbuilder75"][0]
    VND_POWERBUILDER75_S = MIME::Types["application/vnd.powerbuilder75-s"][0]
    VND_POWERBUILDER7_S = MIME::Types["application/vnd.powerbuilder7-s"][0]
    VND_PREMINET = MIME::Types["application/vnd.preminet"][0]
    VND_PREVIEWSYSTEMS_BOX = MIME::Types["application/vnd.previewsystems.box"][0]
    VND_PROTEUS_MAGAZINE = MIME::Types["application/vnd.proteus.magazine"][0]
    VND_PUBLISHARE_DELTA_TREE = MIME::Types["application/vnd.publishare-delta-tree"][0]
    VND_PVI_PTID1 = MIME::Types["application/vnd.pvi.ptid1"][0]
    VND_PWG_MULTIPLEXED = MIME::Types["application/vnd.pwg-multiplexed"][0]
    VND_PWG_XHTML_PRINT_XML = MIME::Types["application/vnd.pwg-xhtml-print+xml"][0]
    VND_QUALCOMM_BREW_APP_RES = MIME::Types["application/vnd.qualcomm.brew-app-res"][0]
    VND_QUARK_QUARKXPRESS = MIME::Types["application/vnd.Quark.QuarkXPress"][0]
    VND_RAPID = MIME::Types["application/vnd.rapid"][0]
    VND_RECORDARE_MUSICXML = MIME::Types["application/vnd.recordare.musicxml"][0]
    VND_RECORDARE_MUSICXML_XML = MIME::Types["application/vnd.recordare.musicxml+xml"][0]
    VND_RENLEARN_RLPRINT = MIME::Types["application/vnd.RenLearn.rlprint"][0]
    VND_ROUTE66_LINK66_XML = MIME::Types["application/vnd.route66.link66+xml"][0]
    VND_RUCKUS_DOWNLOAD = MIME::Types["application/vnd.ruckus.download"][0]
    VND_S3SMS = MIME::Types["application/vnd.s3sms"][0]
    VND_SBM_CID = MIME::Types["application/vnd.sbm.cid"][0]
    VND_SBM_MID2 = MIME::Types["application/vnd.sbm.mid2"][0]
    VND_SCRIBUS = MIME::Types["application/vnd.scribus"][0]
    VND_SEALED_3DF = MIME::Types["application/vnd.sealed.3df"][0]
    VND_SEALED_CSF = MIME::Types["application/vnd.sealed.csf"][0]
    VND_SEALED_DOC = MIME::Types["application/vnd.sealed.doc"][0]
    VND_SEALED_EML = MIME::Types["application/vnd.sealed.eml"][0]
    VND_SEALED_MHT = MIME::Types["application/vnd.sealed.mht"][0]
    VND_SEALED_NET = MIME::Types["application/vnd.sealed.net"][0]
    VND_SEALED_PPT = MIME::Types["application/vnd.sealed.ppt"][0]
    VND_SEALED_TIFF = MIME::Types["application/vnd.sealed.tiff"][0]
    VND_SEALED_XLS = MIME::Types["application/vnd.sealed.xls"][0]
    VND_SEALEDMEDIA_SOFTSEAL_HTML = MIME::Types["application/vnd.sealedmedia.softseal.html"][0]
    VND_SEALEDMEDIA_SOFTSEAL_PDF = MIME::Types["application/vnd.sealedmedia.softseal.pdf"][0]
    VND_SEEMAIL = MIME::Types["application/vnd.seemail"][0]
    VND_SEMA = MIME::Types["application/vnd.sema"][0]
    VND_SEMD = MIME::Types["application/vnd.semd"][0]
    VND_SEMF = MIME::Types["application/vnd.semf"][0]
    VND_SHANA_INFORMED_FORMDATA = MIME::Types["application/vnd.shana.informed.formdata"][0]
    VND_SHANA_INFORMED_FORMTEMPLATE = MIME::Types["application/vnd.shana.informed.formtemplate"][0]
    VND_SHANA_INFORMED_INTERCHANGE = MIME::Types["application/vnd.shana.informed.interchange"][0]
    VND_SHANA_INFORMED_PACKAGE = MIME::Types["application/vnd.shana.informed.package"][0]
    VND_SIMTECH_MINDMAPPER = MIME::Types["application/vnd.SimTech-MindMapper"][0]
    VND_SMAF = MIME::Types["application/vnd.smaf"][0]
    VND_SOFTWARE602_FILLER_FORM_XML = MIME::Types["application/vnd.software602.filler.form+xml"][0]
    VND_SOFTWARE602_FILLER_FORM_XML_ZIP = MIME::Types["application/vnd.software602.filler.form-xml-zip"][0]
    VND_SOLENT_SDKM_XML = MIME::Types["application/vnd.solent.sdkm+xml"][0]
    VND_SPOTFIRE_DXP = MIME::Types["application/vnd.spotfire.dxp"][0]
    VND_SPOTFIRE_SFS = MIME::Types["application/vnd.spotfire.sfs"][0]
    VND_SSS_COD = MIME::Types["application/vnd.sss-cod"][0]
    VND_SSS_DTF = MIME::Types["application/vnd.sss-dtf"][0]
    VND_SSS_NTF = MIME::Types["application/vnd.sss-ntf"][0]
    VND_STREET_STREAM = MIME::Types["application/vnd.street-stream"][0]
    VND_SUN_WADL_XML = MIME::Types["application/vnd.sun.wadl+xml"][0]
    VND_SUS_CALENDAR = MIME::Types["application/vnd.sus-calendar"][0]
    VND_SVD = MIME::Types["application/vnd.svd"][0]
    VND_SWIFTVIEW_ICS = MIME::Types["application/vnd.swiftview-ics"][0]
    VND_SYNCML_DM_WBXML = MIME::Types["application/vnd.syncml.dm+wbxml"][0]
    VND_SYNCML_DM_XML = MIME::Types["application/vnd.syncml.dm+xml"][0]
    VND_SYNCML_DS_NOTIFICATION = MIME::Types["application/vnd.syncml.ds.notification"][0]
    VND_SYNCML_XML = MIME::Types["application/vnd.syncml+xml"][0]
    VND_TAO_INTENT_MODULE_ARCHIVE = MIME::Types["application/vnd.tao.intent-module-archive"][0]
    VND_TMOBILE_LIVETV = MIME::Types["application/vnd.tmobile-livetv"][0]
    VND_TRID_TPT = MIME::Types["application/vnd.trid.tpt"][0]
    VND_TRISCAPE_MXS = MIME::Types["application/vnd.triscape.mxs"][0]
    VND_TRUEAPP = MIME::Types["application/vnd.trueapp"][0]
    VND_TRUEDOC = MIME::Types["application/vnd.truedoc"][0]
    VND_UFDL = MIME::Types["application/vnd.ufdl"][0]
    VND_UIQ_THEME = MIME::Types["application/vnd.uiq.theme"][0]
    VND_UMAJIN = MIME::Types["application/vnd.umajin"][0]
    VND_UNITY = MIME::Types["application/vnd.unity"][0]
    VND_UOML_XML = MIME::Types["application/vnd.uoml+xml"][0]
    VND_UPLANET_ALERT = MIME::Types["application/vnd.uplanet.alert"][0]
    VND_UPLANET_ALERT_WBXML = MIME::Types["application/vnd.uplanet.alert-wbxml"][0]
    VND_UPLANET_BEARER_CHOICE = MIME::Types["application/vnd.uplanet.bearer-choice"][0]
    VND_UPLANET_BEARER_CHOICE_WBXML = MIME::Types["application/vnd.uplanet.bearer-choice-wbxml"][0]
    VND_UPLANET_CACHEOP = MIME::Types["application/vnd.uplanet.cacheop"][0]
    VND_UPLANET_CACHEOP_WBXML = MIME::Types["application/vnd.uplanet.cacheop-wbxml"][0]
    VND_UPLANET_CHANNEL = MIME::Types["application/vnd.uplanet.channel"][0]
    VND_UPLANET_CHANNEL_WBXML = MIME::Types["application/vnd.uplanet.channel-wbxml"][0]
    VND_UPLANET_LIST = MIME::Types["application/vnd.uplanet.list"][0]
    VND_UPLANET_LISTCMD = MIME::Types["application/vnd.uplanet.listcmd"][0]
    VND_UPLANET_LISTCMD_WBXML = MIME::Types["application/vnd.uplanet.listcmd-wbxml"][0]
    VND_UPLANET_LIST_WBXML = MIME::Types["application/vnd.uplanet.list-wbxml"][0]
    VND_UPLANET_SIGNAL = MIME::Types["application/vnd.uplanet.signal"][0]
    VND_VCX = MIME::Types["application/vnd.vcx"][0]
    VND_VD_STUDY = MIME::Types["application/vnd.vd-study"][0]
    VND_VECTORWORKS = MIME::Types["application/vnd.vectorworks"][0]
    VND_VIDSOFT_VIDCONFERENCE = MIME::Types["application/vnd.vidsoft.vidconference"][0]
    VND_VISIO = MIME::Types["application/vnd.visio"][0]
    VND_VISIONARY = MIME::Types["application/vnd.visionary"][0]
    VND_VIVIDENCE_SCRIPTFILE = MIME::Types["application/vnd.vividence.scriptfile"][0]
    VND_VSF = MIME::Types["application/vnd.vsf"][0]
    VND_WAP_SIC = MIME::Types["application/vnd.wap.sic"][0]
    VND_WAP_SLC = MIME::Types["application/vnd.wap.slc"][0]
    VND_WAP_WBXML = MIME::Types["application/vnd.wap.wbxml"][0]
    VND_WAP_WMLC = MIME::Types["application/vnd.wap.wmlc"][0]
    VND_WAP_WMLSCRIPTC = MIME::Types["application/vnd.wap.wmlscriptc"][0]
    VND_WEBTURBO = MIME::Types["application/vnd.webturbo"][0]
    VND_WFA_WSC = MIME::Types["application/vnd.wfa.wsc"][0]
    VND_WMC = MIME::Types["application/vnd.wmc"][0]
    VND_WMF_BOOTSTRAP = MIME::Types["application/vnd.wmf.bootstrap"][0]
    VND_WORDPERFECT = MIME::Types["application/vnd.wordperfect"][0]
    VND_WQD = MIME::Types["application/vnd.wqd"][0]
    VND_WRQ_HP3000_LABELLED = MIME::Types["application/vnd.wrq-hp3000-labelled"][0]
    VND_WT_STF = MIME::Types["application/vnd.wt.stf"][0]
    VND_WV_CSP_XML = MIME::Types["application/vnd.wv.csp+xml"][0]
    VND_WV_CSP_WBXML = MIME::Types["application/vnd.wv.csp+wbxml"][0]
    VND_WV_SSP_XML = MIME::Types["application/vnd.wv.ssp+xml"][0]
    VND_XARA = MIME::Types["application/vnd.xara"][0]
    VND_XFDL = MIME::Types["application/vnd.xfdl"][0]
    VND_XMI_XML = MIME::Types["application/vnd.xmi+xml"][0]
    VND_XMPIE_CPKG = MIME::Types["application/vnd.xmpie.cpkg"][0]
    VND_XMPIE_DPKG = MIME::Types["application/vnd.xmpie.dpkg"][0]
    VND_XMPIE_PLAN = MIME::Types["application/vnd.xmpie.plan"][0]
    VND_XMPIE_PPKG = MIME::Types["application/vnd.xmpie.ppkg"][0]
    VND_XMPIE_XLIM = MIME::Types["application/vnd.xmpie.xlim"][0]
    VND_YAMAHA_HV_DIC = MIME::Types["application/vnd.yamaha.hv-dic"][0]
    VND_YAMAHA_HV_SCRIPT = MIME::Types["application/vnd.yamaha.hv-script"][0]
    VND_YAMAHA_HV_VOICE = MIME::Types["application/vnd.yamaha.hv-voice"][0]
    VND_YAMAHA_SMAF_AUDIO = MIME::Types["application/vnd.yamaha.smaf-audio"][0]
    VND_YAMAHA_SMAF_PHRASE = MIME::Types["application/vnd.yamaha.smaf-phrase"][0]
    VND_YELLOWRIVER_CUSTOM_MENU = MIME::Types["application/vnd.yellowriver-custom-menu"][0]
    VND_ZZAZZ_DECK_XML = MIME::Types["application/vnd.zzazz.deck+xml"][0]
    VOICEXML_XML = MIME::Types["application/voicexml+xml"][0]
    WATCHERINFO_XML = MIME::Types["application/watcherinfo+xml"][0]
    WHOISPP_QUERY = MIME::Types["application/whoispp-query"][0]
    WHOISPP_RESPONSE = MIME::Types["application/whoispp-response"][0]
    WITA = MIME::Types["application/wita"][0]
    WORDPERFECT5_1 = MIME::Types["application/wordperfect5.1"][0]
    WSDL_XML = MIME::Types["application/wsdl+xml"][0]
    WSPOLICY_XML = MIME::Types["application/wspolicy+xml"][0]
    X400_BP = MIME::Types["application/x400-bp"][0]
    XCAP_ATT_XML = MIME::Types["application/xcap-att+xml"][0]
    XCAP_CAPS_XML = MIME::Types["application/xcap-caps+xml"][0]
    XCAP_EL_XML = MIME::Types["application/xcap-el+xml"][0]
    XCAP_ERROR_XML = MIME::Types["application/xcap-error+xml"][0]
    XCAP_NS_XML = MIME::Types["application/xcap-ns+xml"][0]
    XENC_XML = MIME::Types["application/xenc+xml"][0]
    XHTML_VOICE_XML = MIME::Types["application/xhtml-voice+xml"][0]
    XHTML_XML = MIME::Types["application/xhtml+xml"][0]
    XML = MIME::Types["application/xml"][0]
    XML_DTD = MIME::Types["application/xml-dtd"][0]
    XML_EXTERNAL_PARSED_ENTITY = MIME::Types["application/xml-external-parsed-entity"][0]
    XMPP_XML = MIME::Types["application/xmpp+xml"][0]
    XOP_XML = MIME::Types["application/xop+xml"][0]
    XV_XML = MIME::Types["application/xv+xml"][0]
    ZIP = MIME::Types["application/zip"][0]
end

module Audio
    _32KADPCM = MIME::Types["audio/32kadpcm"][0]
    _3GPP = MIME::Types["audio/3gpp"][0]
    _3GPP2 = MIME::Types["audio/3gpp2"][0]
    AC3 = MIME::Types["audio/ac3"][0]
    AMR = MIME::Types["audio/AMR"][0]
    AMR_WB = MIME::Types["audio/AMR-WB"][0]
    AMR_WB_ = MIME::Types["audio/amr-wb+"][0]
    ASC = MIME::Types["audio/asc"][0]
    BASIC = MIME::Types["audio/basic"][0]
    BV16 = MIME::Types["audio/BV16"][0]
    BV32 = MIME::Types["audio/BV32"][0]
    CLEARMODE = MIME::Types["audio/clearmode"][0]
    CN = MIME::Types["audio/CN"][0]
    DAT12 = MIME::Types["audio/DAT12"][0]
    DLS = MIME::Types["audio/dls"][0]
    DSR_ES201108 = MIME::Types["audio/dsr-es201108"][0]
    DSR_ES202050 = MIME::Types["audio/dsr-es202050"][0]
    DSR_ES202211 = MIME::Types["audio/dsr-es202211"][0]
    DSR_ES202212 = MIME::Types["audio/dsr-es202212"][0]
    EAC3 = MIME::Types["audio/eac3"][0]
    DVI4 = MIME::Types["audio/DVI4"][0]
    EVRC = MIME::Types["audio/EVRC"][0]
    EVRC0 = MIME::Types["audio/EVRC0"][0]
    EVRC1 = MIME::Types["audio/EVRC1"][0]
    EVRCB = MIME::Types["audio/EVRCB"][0]
    EVRCB0 = MIME::Types["audio/EVRCB0"][0]
    EVRCB1 = MIME::Types["audio/EVRCB1"][0]
    EVRC_QCP = MIME::Types["audio/EVRC-QCP"][0]
    EVRCWB = MIME::Types["audio/EVRCWB"][0]
    EVRCWB0 = MIME::Types["audio/EVRCWB0"][0]
    EVRCWB1 = MIME::Types["audio/EVRCWB1"][0]
    EXAMPLE = MIME::Types["audio/example"][0]
    G722 = MIME::Types["audio/G722"][0]
    G7221 = MIME::Types["audio/G7221"][0]
    G723 = MIME::Types["audio/G723"][0]
    G726_16 = MIME::Types["audio/G726-16"][0]
    G726_24 = MIME::Types["audio/G726-24"][0]
    G726_32 = MIME::Types["audio/G726-32"][0]
    G726_40 = MIME::Types["audio/G726-40"][0]
    G728 = MIME::Types["audio/G728"][0]
    G729 = MIME::Types["audio/G729"][0]
    G7291 = MIME::Types["audio/G7291"][0]
    G729D = MIME::Types["audio/G729D"][0]
    G729E = MIME::Types["audio/G729E"][0]
    GSM = MIME::Types["audio/GSM"][0]
    GSM_EFR = MIME::Types["audio/GSM-EFR"][0]
    ILBC = MIME::Types["audio/iLBC"][0]
    L8 = MIME::Types["audio/L8"][0]
    L16 = MIME::Types["audio/L16"][0]
    L20 = MIME::Types["audio/L20"][0]
    L24 = MIME::Types["audio/L24"][0]
    LPC = MIME::Types["audio/LPC"][0]
    MOBILE_XMF = MIME::Types["audio/mobile-xmf"][0]
    MPA = MIME::Types["audio/MPA"][0]
    MP4 = MIME::Types["audio/mp4"][0]
    MP4A_LATM = MIME::Types["audio/MP4A-LATM"][0]
    MPA_ROBUST = MIME::Types["audio/mpa-robust"][0]
    MPEG = MIME::Types["audio/mpeg"][0]
    MPEG4_GENERIC = MIME::Types["audio/mpeg4-generic"][0]
    OGG = MIME::Types["audio/ogg"][0]
    PARITYFEC = MIME::Types["audio/parityfec"][0]
    PCMA = MIME::Types["audio/PCMA"][0]
    PCMA_WB = MIME::Types["audio/PCMA-WB"][0]
    PCMU = MIME::Types["audio/PCMU"][0]
    PCMU_WB = MIME::Types["audio/PCMU-WB"][0]
    PRS_SID = MIME::Types["audio/prs.sid"][0]
    QCELP = MIME::Types["audio/QCELP"][0]
    RED = MIME::Types["audio/RED"][0]
    RTP_ENC_AESCM128 = MIME::Types["audio/rtp-enc-aescm128"][0]
    RTP_MIDI = MIME::Types["audio/rtp-midi"][0]
    RTX = MIME::Types["audio/rtx"][0]
    SMV = MIME::Types["audio/SMV"][0]
    SMV0 = MIME::Types["audio/SMV0"][0]
    SMV_QCP = MIME::Types["audio/SMV-QCP"][0]
    SP_MIDI = MIME::Types["audio/sp-midi"][0]
    T140C = MIME::Types["audio/t140c"][0]
    T38 = MIME::Types["audio/t38"][0]
    TELEPHONE_EVENT = MIME::Types["audio/telephone-event"][0]
    TONE = MIME::Types["audio/tone"][0]
    ULPFEC = MIME::Types["audio/ulpfec"][0]
    VDVI = MIME::Types["audio/VDVI"][0]
    VMR_WB = MIME::Types["audio/VMR-WB"][0]
    VND_3GPP_IUFP = MIME::Types["audio/vnd.3gpp.iufp"][0]
    VND_4SB = MIME::Types["audio/vnd.4SB"][0]
    VND_AUDIOKOZ = MIME::Types["audio/vnd.audiokoz"][0]
    VND_CELP = MIME::Types["audio/vnd.CELP"][0]
    VND_CISCO_NSE = MIME::Types["audio/vnd.cisco.nse"][0]
    VND_CMLES_RADIO_EVENTS = MIME::Types["audio/vnd.cmles.radio-events"][0]
    VND_CNS_ANP1 = MIME::Types["audio/vnd.cns.anp1"][0]
    VND_CNS_INF1 = MIME::Types["audio/vnd.cns.inf1"][0]
    VND_DIGITAL_WINDS = MIME::Types["audio/vnd.digital-winds"][0]
    VND_DLNA_ADTS = MIME::Types["audio/vnd.dlna.adts"][0]
    VND_DOLBY_MLP = MIME::Types["audio/vnd.dolby.mlp"][0]
    VND_DTS = MIME::Types["audio/vnd.dts"][0]
    VND_DTS_HD = MIME::Types["audio/vnd.dts.hd"][0]
    VND_EVERAD_PLJ = MIME::Types["audio/vnd.everad.plj"][0]
    VND_HNS_AUDIO = MIME::Types["audio/vnd.hns.audio"][0]
    VND_LUCENT_VOICE = MIME::Types["audio/vnd.lucent.voice"][0]
    VND_MS_PLAYREADY_MEDIA_PYA = MIME::Types["audio/vnd.ms-playready.media.pya"][0]
    VND_NOKIA_MOBILE_XMF = MIME::Types["audio/vnd.nokia.mobile-xmf"][0]
    VND_NORTEL_VBK = MIME::Types["audio/vnd.nortel.vbk"][0]
    VND_NUERA_ECELP4800 = MIME::Types["audio/vnd.nuera.ecelp4800"][0]
    VND_NUERA_ECELP7470 = MIME::Types["audio/vnd.nuera.ecelp7470"][0]
    VND_NUERA_ECELP9600 = MIME::Types["audio/vnd.nuera.ecelp9600"][0]
    VND_OCTEL_SBC = MIME::Types["audio/vnd.octel.sbc"][0]
    VND_QCELP = MIME::Types["audio/vnd.qcelp"][0]
    VND_RHETOREX_32KADPCM = MIME::Types["audio/vnd.rhetorex.32kadpcm"][0]
    VND_SEALEDMEDIA_SOFTSEAL_MPEG = MIME::Types["audio/vnd.sealedmedia.softseal.mpeg"][0]
    VND_VMX_CVSD = MIME::Types["audio/vnd.vmx.cvsd"][0]
    VORBIS = MIME::Types["audio/vorbis"][0]
    VORBIS_CONFIG = MIME::Types["audio/vorbis-config"][0]
end

module Image
    CGM = MIME::Types["image/cgm"][0]
    EXAMPLE = MIME::Types["image/example"][0]
    FITS = MIME::Types["image/fits"][0]
    G3FAX = MIME::Types["image/g3fax"][0]
    GIF = MIME::Types["image/gif"][0]
    IEF = MIME::Types["image/ief"][0]
    JP2 = MIME::Types["image/jp2"][0]
    JPEG = MIME::Types["image/jpeg"][0]
    JPM = MIME::Types["image/jpm"][0]
    JPX = MIME::Types["image/jpx"][0]
    NAPLPS = MIME::Types["image/naplps"][0]
    PNG = MIME::Types["image/png"][0]
    PRS_BTIF = MIME::Types["image/prs.btif"][0]
    PRS_PTI = MIME::Types["image/prs.pti"][0]
    T38 = MIME::Types["image/t38"][0]
    TIFF = MIME::Types["image/tiff"][0]
    TIFF_FX = MIME::Types["image/tiff-fx"][0]
    VND_ADOBE_PHOTOSHOP = MIME::Types["image/vnd.adobe.photoshop"][0]
    VND_CNS_INF2 = MIME::Types["image/vnd.cns.inf2"][0]
    VND_DJVU = MIME::Types["image/vnd.djvu"][0]
    VND_DWG = MIME::Types["image/vnd.dwg"][0]
    VND_DXF = MIME::Types["image/vnd.dxf"][0]
    VND_FASTBIDSHEET = MIME::Types["image/vnd.fastbidsheet"][0]
    VND_FPX = MIME::Types["image/vnd.fpx"][0]
    VND_FST = MIME::Types["image/vnd.fst"][0]
    VND_FUJIXEROX_EDMICS_MMR = MIME::Types["image/vnd.fujixerox.edmics-mmr"][0]
    VND_FUJIXEROX_EDMICS_RLC = MIME::Types["image/vnd.fujixerox.edmics-rlc"][0]
    VND_GLOBALGRAPHICS_PGB = MIME::Types["image/vnd.globalgraphics.pgb"][0]
    VND_MICROSOFT_ICON = MIME::Types["image/vnd.microsoft.icon"][0]
    VND_MIX = MIME::Types["image/vnd.mix"][0]
    VND_MS_MODI = MIME::Types["image/vnd.ms-modi"][0]
    VND_NET_FPX = MIME::Types["image/vnd.net-fpx"][0]
    VND_SEALED_PNG = MIME::Types["image/vnd.sealed.png"][0]
    VND_SEALEDMEDIA_SOFTSEAL_GIF = MIME::Types["image/vnd.sealedmedia.softseal.gif"][0]
    VND_SEALEDMEDIA_SOFTSEAL_JPG = MIME::Types["image/vnd.sealedmedia.softseal.jpg"][0]
    VND_SVF = MIME::Types["image/vnd.svf"][0]
    VND_WAP_WBMP = MIME::Types["image/vnd.wap.wbmp"][0]
    VND_XIFF = MIME::Types["image/vnd.xiff"][0]
end

module Message
    CPIM = MIME::Types["message/CPIM"][0]
    DELIVERY_STATUS = MIME::Types["message/delivery-status"][0]
    DISPOSITION_NOTIFICATION = MIME::Types["message/disposition-notification"][0]
    EXAMPLE = MIME::Types["message/example"][0]
    EXTERNAL_BODY = MIME::Types["message/external-body"][0]
    GLOBAL = MIME::Types["message/global"][0]
    GLOBAL_DELIVERY_STATUS = MIME::Types["message/global-delivery-status"][0]
    GLOBAL_DISPOSITION_NOTIFICATION = MIME::Types["message/global-disposition-notification"][0]
    GLOBAL_HEADERS = MIME::Types["message/global-headers"][0]
    HTTP = MIME::Types["message/http"][0]
    NEWS = MIME::Types["message/news"][0]
    PARTIAL = MIME::Types["message/partial"][0]
    RFC822 = MIME::Types["message/rfc822"][0]
    S_HTTP = MIME::Types["message/s-http"][0]
    SIP = MIME::Types["message/sip"][0]
    SIPFRAG = MIME::Types["message/sipfrag"][0]
    TRACKING_STATUS = MIME::Types["message/tracking-status"][0]
    VND_SI_SIMP = MIME::Types["message/vnd.si.simp"][0]
end

module Model
    EXAMPLE = MIME::Types["model/example"][0]
    IGES = MIME::Types["model/iges"][0]
    MESH = MIME::Types["model/mesh"][0]
    VND_DWF = MIME::Types["model/vnd.dwf"][0]
    VND_FLATLAND_3DML = MIME::Types["model/vnd.flatland.3dml"][0]
    VND_GDL = MIME::Types["model/vnd.gdl"][0]
    VND_GS_GDL = MIME::Types["model/vnd.gs-gdl"][0]
    VND_GTW = MIME::Types["model/vnd.gtw"][0]
    VND_MOML_XML = MIME::Types["model/vnd.moml+xml"][0]
    VND_MTS = MIME::Types["model/vnd.mts"][0]
    VND_PARASOLID_TRANSMIT_BINARY = MIME::Types["model/vnd.parasolid.transmit.binary"][0]
    VND_PARASOLID_TRANSMIT_TEXT = MIME::Types["model/vnd.parasolid.transmit.text"][0]
    VND_VTU = MIME::Types["model/vnd.vtu"][0]
    VRML = MIME::Types["model/vrml"][0]
end

module Multipart
    ALTERNATIVE = MIME::Types["multipart/alternative"][0]
    APPLEDOUBLE = MIME::Types["multipart/appledouble"][0]
    BYTERANGES = MIME::Types["multipart/byteranges"][0]
    DIGEST = MIME::Types["multipart/digest"][0]
    ENCRYPTED = MIME::Types["multipart/encrypted"][0]
    EXAMPLE = MIME::Types["multipart/example"][0]
    FORM_DATA = MIME::Types["multipart/form-data"][0]
    HEADER_SET = MIME::Types["multipart/header-set"][0]
    MIXED = MIME::Types["multipart/mixed"][0]
    PARALLEL = MIME::Types["multipart/parallel"][0]
    RELATED = MIME::Types["multipart/related"][0]
    REPORT = MIME::Types["multipart/report"][0]
    SIGNED = MIME::Types["multipart/signed"][0]
    VOICE_MESSAGE = MIME::Types["multipart/voice-message"][0]
end

module Text
    CALENDAR = MIME::Types["text/calendar"][0]
    CSS = MIME::Types["text/css"][0]
    CSV = MIME::Types["text/csv"][0]
    DIRECTORY = MIME::Types["text/directory"][0]
    DNS = MIME::Types["text/dns"][0]
    ECMASCRIPT = MIME::Types["text/ecmascript"][0]
    ENRICHED = MIME::Types["text/enriched"][0]
    EXAMPLE = MIME::Types["text/example"][0]
    HTML = MIME::Types["text/html"][0]
    JAVASCRIPT = MIME::Types["text/javascript"][0]
    PARITYFEC = MIME::Types["text/parityfec"][0]
    PLAIN = MIME::Types["text/plain"][0]
    PRS_FALLENSTEIN_RST = MIME::Types["text/prs.fallenstein.rst"][0]
    PRS_LINES_TAG = MIME::Types["text/prs.lines.tag"][0]
    RED = MIME::Types["text/red"][0]
    RFC822_HEADERS = MIME::Types["text/rfc822-headers"][0]
    RICHTEXT = MIME::Types["text/richtext"][0]
    RTF = MIME::Types["text/rtf"][0]
    RTP_ENC_AESCM128 = MIME::Types["text/rtp-enc-aescm128"][0]
    RTX = MIME::Types["text/rtx"][0]
    SGML = MIME::Types["text/sgml"][0]
    T140 = MIME::Types["text/t140"][0]
    TAB_SEPARATED_VALUES = MIME::Types["text/tab-separated-values"][0]
    TROFF = MIME::Types["text/troff"][0]
    ULPFEC = MIME::Types["text/ulpfec"][0]
    URI_LIST = MIME::Types["text/uri-list"][0]
    VND_ABC = MIME::Types["text/vnd.abc"][0]
    VND_CURL = MIME::Types["text/vnd.curl"][0]
    VND_DMCLIENTSCRIPT = MIME::Types["text/vnd.DMClientScript"][0]
    VND_ESMERTEC_THEME_DESCRIPTOR = MIME::Types["text/vnd.esmertec.theme-descriptor"][0]
    VND_FLY = MIME::Types["text/vnd.fly"][0]
    VND_FMI_FLEXSTOR = MIME::Types["text/vnd.fmi.flexstor"][0]
    VND_GRAPHVIZ = MIME::Types["text/vnd.graphviz"][0]
    VND_IN3D_3DML = MIME::Types["text/vnd.in3d.3dml"][0]
    VND_IN3D_SPOT = MIME::Types["text/vnd.in3d.spot"][0]
    VND_IPTC_NEWSML = MIME::Types["text/vnd.IPTC.NewsML"][0]
    VND_IPTC_NITF = MIME::Types["text/vnd.IPTC.NITF"][0]
    VND_LATEX_Z = MIME::Types["text/vnd.latex-z"][0]
    VND_MOTOROLA_REFLEX = MIME::Types["text/vnd.motorola.reflex"][0]
    VND_MS_MEDIAPACKAGE = MIME::Types["text/vnd.ms-mediapackage"][0]
    VND_NET2PHONE_COMMCENTER_COMMAND = MIME::Types["text/vnd.net2phone.commcenter.command"][0]
    VND_SI_URICATALOGUE = MIME::Types["text/vnd.si.uricatalogue"][0]
    VND_SUN_J2ME_APP_DESCRIPTOR = MIME::Types["text/vnd.sun.j2me.app-descriptor"][0]
    VND_TROLLTECH_LINGUST = MIME::Types["text/vnd.trolltech.lingust"][0]
    VND_WAP_SI = MIME::Types["text/vnd.wap.si"][0]
    VND_WAP_SL = MIME::Types["text/vnd.wap.sl"][0]
    VND_WAP_WML = MIME::Types["text/vnd.wap.wml"][0]
    VND_WAP_WMLSCRIPT = MIME::Types["text/vnd.wap.wmlscript"][0]
    XML = MIME::Types["text/xml"][0]
    XML_EXTERNAL_PARSED_ENTITY = MIME::Types["text/xml-external-parsed-entity"][0]
end

module Video
    _3GPP = MIME::Types["video/3gpp"][0]
    _3GPP2 = MIME::Types["video/3gpp2"][0]
    _3GPP_TT = MIME::Types["video/3gpp-tt"][0]
    BMPEG = MIME::Types["video/BMPEG"][0]
    BT656 = MIME::Types["video/BT656"][0]
    CELB = MIME::Types["video/CelB"][0]
    DV = MIME::Types["video/DV"][0]
    EXAMPLE = MIME::Types["video/example"][0]
    H261 = MIME::Types["video/H261"][0]
    H263 = MIME::Types["video/H263"][0]
    H263_1998 = MIME::Types["video/H263-1998"][0]
    H263_2000 = MIME::Types["video/H263-2000"][0]
    H264 = MIME::Types["video/H264"][0]
    JPEG = MIME::Types["video/JPEG"][0]
    JPEG2000 = MIME::Types["video/jpeg2000"][0]
    MJ2 = MIME::Types["video/MJ2"][0]
    MP1S = MIME::Types["video/MP1S"][0]
    MP2P = MIME::Types["video/MP2P"][0]
    MP2T = MIME::Types["video/MP2T"][0]
    MP4 = MIME::Types["video/mp4"][0]
    MP4V_ES = MIME::Types["video/MP4V-ES"][0]
    MPV = MIME::Types["video/MPV"][0]
    MPEG = MIME::Types["video/mpeg"][0]
    MPEG4_GENERIC = MIME::Types["video/mpeg4-generic"][0]
    NV = MIME::Types["video/nv"][0]
    OGG = MIME::Types["video/ogg"][0]
    PARITYFEC = MIME::Types["video/parityfec"][0]
    POINTER = MIME::Types["video/pointer"][0]
    QUICKTIME = MIME::Types["video/quicktime"][0]
    RAW = MIME::Types["video/raw"][0]
    RTP_ENC_AESCM128 = MIME::Types["video/rtp-enc-aescm128"][0]
    RTX = MIME::Types["video/rtx"][0]
    SMPTE292M = MIME::Types["video/SMPTE292M"][0]
    ULPFEC = MIME::Types["video/ulpfec"][0]
    VC1 = MIME::Types["video/vc1"][0]
    VND_CCTV = MIME::Types["video/vnd.CCTV"][0]
    VND_DLNA_MPEG_TTS = MIME::Types["video/vnd.dlna.mpeg-tts"][0]
    VND_FVT = MIME::Types["video/vnd.fvt"][0]
    VND_HNS_VIDEO = MIME::Types["video/vnd.hns.video"][0]
    VND_IPTVFORUM_1DPARITYFEC_1010 = MIME::Types["video/vnd.iptvforum.1dparityfec-1010"][0]
    VND_IPTVFORUM_1DPARITYFEC_2005 = MIME::Types["video/vnd.iptvforum.1dparityfec-2005"][0]
    VND_IPTVFORUM_2DPARITYFEC_1010 = MIME::Types["video/vnd.iptvforum.2dparityfec-1010"][0]
    VND_IPTVFORUM_2DPARITYFEC_2005 = MIME::Types["video/vnd.iptvforum.2dparityfec-2005"][0]
    VND_IPTVFORUM_TTSAVC = MIME::Types["video/vnd.iptvforum.ttsavc"][0]
    VND_IPTVFORUM_TTSMPEG2 = MIME::Types["video/vnd.iptvforum.ttsmpeg2"][0]
    VND_MOTOROLA_VIDEO = MIME::Types["video/vnd.motorola.video"][0]
    VND_MOTOROLA_VIDEOP = MIME::Types["video/vnd.motorola.videop"][0]
    VND_MPEGURL = MIME::Types["video/vnd.mpegurl"][0]
    VND_MS_PLAYREADY_MEDIA_PYV = MIME::Types["video/vnd.ms-playready.media.pyv"][0]
    VND_NOKIA_INTERLEAVED_MULTIMEDIA = MIME::Types["video/vnd.nokia.interleaved-multimedia"][0]
    VND_NOKIA_VIDEOVOIP = MIME::Types["video/vnd.nokia.videovoip"][0]
    VND_OBJECTVIDEO = MIME::Types["video/vnd.objectvideo"][0]
    VND_SEALED_MPEG1 = MIME::Types["video/vnd.sealed.mpeg1"][0]
    VND_SEALED_MPEG4 = MIME::Types["video/vnd.sealed.mpeg4"][0]
    VND_SEALED_SWF = MIME::Types["video/vnd.sealed.swf"][0]
    VND_SEALEDMEDIA_SOFTSEAL_MOV = MIME::Types["video/vnd.sealedmedia.softseal.mov"][0]
    VND_VIVO = MIME::Types["video/vnd.vivo"][0]
end
end
end
