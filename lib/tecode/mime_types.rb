# Automatically generated from mime_types.txt on 2008-11-05T17:11:36.195
module TECode
module MimeType
module Application
    ACTIVEMESSAGE = MIME::Types["application/activemessage"]
    ANDREW_INSET = MIME::Types["application/andrew-inset"]
    APPLEFILE = MIME::Types["application/applefile"]
    ATOM_XML = MIME::Types["application/atom+xml"]
    ATOMICMAIL = MIME::Types["application/atomicmail"]
    ATOMCAT_XML = MIME::Types["application/atomcat+xml"]
    ATOMSVC_XML = MIME::Types["application/atomsvc+xml"]
    AUTH_POLICY_XML = MIME::Types["application/auth-policy+xml"]
    BATCH_SMTP = MIME::Types["application/batch-SMTP"]
    BEEP_XML = MIME::Types["application/beep+xml"]
    CALS_1840 = MIME::Types["application/cals-1840"]
    CCXML_XML = MIME::Types["application/ccxml+xml"]
    CELLML_XML = MIME::Types["application/cellml+xml"]
    CNRP_XML = MIME::Types["application/cnrp+xml"]
    COMMONGROUND = MIME::Types["application/commonground"]
    CONFERENCE_INFO_XML = MIME::Types["application/conference-info+xml"]
    CPL_XML = MIME::Types["application/cpl+xml"]
    CSTA_XML = MIME::Types["application/csta+xml"]
    CSTADATA_XML = MIME::Types["application/CSTAdata+xml"]
    CYBERCASH = MIME::Types["application/cybercash"]
    DAVMOUNT_XML = MIME::Types["application/davmount+xml"]
    DCA_RFT = MIME::Types["application/dca-rft"]
    DEC_DX = MIME::Types["application/dec-dx"]
    DIALOG_INFO_XML = MIME::Types["application/dialog-info+xml"]
    DICOM = MIME::Types["application/dicom"]
    DNS = MIME::Types["application/dns"]
    DVCS = MIME::Types["application/dvcs"]
    ECMASCRIPT = MIME::Types["application/ecmascript"]
    EDI_CONSENT = MIME::Types["application/EDI-Consent"]
    EDIFACT = MIME::Types["application/EDIFACT"]
    EDI_X12 = MIME::Types["application/EDI-X12"]
    EPP_XML = MIME::Types["application/epp+xml"]
    ESHOP = MIME::Types["application/eshop"]
    EXAMPLE = MIME::Types["application/example"]
    FASTINFOSET = MIME::Types["application/fastinfoset"]
    FASTSOAP = MIME::Types["application/fastsoap"]
    FITS = MIME::Types["application/fits"]
    FONT_TDPFR = MIME::Types["application/font-tdpfr"]
    H224 = MIME::Types["application/H224"]
    HTTP = MIME::Types["application/http"]
    HYPERSTUDIO = MIME::Types["application/hyperstudio"]
    IGES = MIME::Types["application/iges"]
    IM_ISCOMPOSING_XML = MIME::Types["application/im-iscomposing+xml"]
    INDEX = MIME::Types["application/index"]
    INDEX_CMD = MIME::Types["application/index.cmd"]
    INDEX_OBJ = MIME::Types["application/index.obj"]
    INDEX_RESPONSE = MIME::Types["application/index.response"]
    INDEX_VND = MIME::Types["application/index.vnd"]
    IOTP = MIME::Types["application/iotp"]
    IPP = MIME::Types["application/ipp"]
    ISUP = MIME::Types["application/isup"]
    JAVASCRIPT = MIME::Types["application/javascript"]
    JSON = MIME::Types["application/json"]
    KPML_REQUEST_XML = MIME::Types["application/kpml-request+xml"]
    KPML_RESPONSE_XML = MIME::Types["application/kpml-response+xml"]
    LOST_XML = MIME::Types["application/lost+xml"]
    MAC_BINHEX40 = MIME::Types["application/mac-binhex40"]
    MACWRITEII = MIME::Types["application/macwriteii"]
    MARC = MIME::Types["application/marc"]
    MATHEMATICA = MIME::Types["application/mathematica"]
    MBMS_ASSOCIATED_PROCEDURE_DESCRIPTION_XML = MIME::Types["application/mbms-associated-procedure-description+xml"]
    MBMS_DEREGISTER_XML = MIME::Types["application/mbms-deregister+xml"]
    MBMS_ENVELOPE_XML = MIME::Types["application/mbms-envelope+xml"]
    MBMS_MSK_RESPONSE_XML = MIME::Types["application/mbms-msk-response+xml"]
    MBMS_MSK_XML = MIME::Types["application/mbms-msk+xml"]
    MBMS_PROTECTION_DESCRIPTION_XML = MIME::Types["application/mbms-protection-description+xml"]
    MBMS_RECEPTION_REPORT_XML = MIME::Types["application/mbms-reception-report+xml"]
    MBMS_REGISTER_RESPONSE_XML = MIME::Types["application/mbms-register-response+xml"]
    MBMS_REGISTER_XML = MIME::Types["application/mbms-register+xml"]
    MBMS_USER_SERVICE_DESCRIPTION_XML = MIME::Types["application/mbms-user-service-description+xml"]
    MBOX = MIME::Types["application/mbox"]
    MEDIA_CONTROL_XML = MIME::Types["application/media_control+xml"]
    MEDIASERVERCONTROL_XML = MIME::Types["application/mediaservercontrol+xml"]
    MIKEY = MIME::Types["application/mikey"]
    MOSS_KEYS = MIME::Types["application/moss-keys"]
    MOSS_SIGNATURE = MIME::Types["application/moss-signature"]
    MOSSKEY_DATA = MIME::Types["application/mosskey-data"]
    MOSSKEY_REQUEST = MIME::Types["application/mosskey-request"]
    MPEG4_GENERIC = MIME::Types["application/mpeg4-generic"]
    MPEG4_IOD = MIME::Types["application/mpeg4-iod"]
    MPEG4_IOD_XMT = MIME::Types["application/mpeg4-iod-xmt"]
    MP4 = MIME::Types["application/mp4"]
    MSWORD = MIME::Types["application/msword"]
    MXF = MIME::Types["application/mxf"]
    NASDATA = MIME::Types["application/nasdata"]
    NEWS_TRANSMISSION = MIME::Types["application/news-transmission"]
    NSS = MIME::Types["application/nss"]
    OCSP_REQUEST = MIME::Types["application/ocsp-request"]
    OCSP_RESPONSE = MIME::Types["application/ocsp-response"]
    OCTET_STREAM = MIME::Types["application/octet-stream"]
    ODA = MIME::Types["application/oda"]
    OEBPS_PACKAGE_XML = MIME::Types["application/oebps-package+xml"]
    OGG = MIME::Types["application/ogg"]
    PARITYFEC = MIME::Types["application/parityfec"]
    PATCH_OPS_ERROR_XML = MIME::Types["application/patch-ops-error+xml"]
    PDF = MIME::Types["application/pdf"]
    PGP_ENCRYPTED = MIME::Types["application/pgp-encrypted"]
    PGP_KEYS = MIME::Types["application/pgp-keys"]
    PGP_SIGNATURE = MIME::Types["application/pgp-signature"]
    PIDF_XML = MIME::Types["application/pidf+xml"]
    PIDF_DIFF_XML = MIME::Types["application/pidf-diff+xml"]
    PKCS10 = MIME::Types["application/pkcs10"]
    PKCS7_MIME = MIME::Types["application/pkcs7-mime"]
    PKCS7_SIGNATURE = MIME::Types["application/pkcs7-signature"]
    PKIX_CERT = MIME::Types["application/pkix-cert"]
    PKIXCMP = MIME::Types["application/pkixcmp"]
    PKIX_CRL = MIME::Types["application/pkix-crl"]
    PKIX_PKIPATH = MIME::Types["application/pkix-pkipath"]
    PLS_XML = MIME::Types["application/pls+xml"]
    POC_SETTINGS_XML = MIME::Types["application/poc-settings+xml"]
    POSTSCRIPT = MIME::Types["application/postscript"]
    PRS_ALVESTRAND_TITRAX_SHEET = MIME::Types["application/prs.alvestrand.titrax-sheet"]
    PRS_CWW = MIME::Types["application/prs.cww"]
    PRS_NPREND = MIME::Types["application/prs.nprend"]
    PRS_PLUCKER = MIME::Types["application/prs.plucker"]
    RDF_XML = MIME::Types["application/rdf+xml"]
    QSIG = MIME::Types["application/qsig"]
    REGINFO_XML = MIME::Types["application/reginfo+xml"]
    RELAX_NG_COMPACT_SYNTAX = MIME::Types["application/relax-ng-compact-syntax"]
    REMOTE_PRINTING = MIME::Types["application/remote-printing"]
    RESOURCE_LISTS_DIFF_XML = MIME::Types["application/resource-lists-diff+xml"]
    RESOURCE_LISTS_XML = MIME::Types["application/resource-lists+xml"]
    RISCOS = MIME::Types["application/riscos"]
    RLMI_XML = MIME::Types["application/rlmi+xml"]
    RLS_SERVICES_XML = MIME::Types["application/rls-services+xml"]
    RTF = MIME::Types["application/rtf"]
    RTX = MIME::Types["application/rtx"]
    SAMLASSERTION_XML = MIME::Types["application/samlassertion+xml"]
    SAMLMETADATA_XML = MIME::Types["application/samlmetadata+xml"]
    SBML_XML = MIME::Types["application/sbml+xml"]
    SCVP_CV_REQUEST = MIME::Types["application/scvp-cv-request"]
    SCVP_CV_RESPONSE = MIME::Types["application/scvp-cv-response"]
    SCVP_VP_REQUEST = MIME::Types["application/scvp-vp-request"]
    SCVP_VP_RESPONSE = MIME::Types["application/scvp-vp-response"]
    SDP = MIME::Types["application/sdp"]
    SET_PAYMENT = MIME::Types["application/set-payment"]
    SET_PAYMENT_INITIATION = MIME::Types["application/set-payment-initiation"]
    SET_REGISTRATION = MIME::Types["application/set-registration"]
    SET_REGISTRATION_INITIATION = MIME::Types["application/set-registration-initiation"]
    SGML = MIME::Types["application/sgml"]
    SGML_OPEN_CATALOG = MIME::Types["application/sgml-open-catalog"]
    SHF_XML = MIME::Types["application/shf+xml"]
    SIEVE = MIME::Types["application/sieve"]
    SIMPLE_FILTER_XML = MIME::Types["application/simple-filter+xml"]
    SIMPLE_MESSAGE_SUMMARY = MIME::Types["application/simple-message-summary"]
     SIMPLESYMBOLCONTAINER = MIME::Types["application/ simpleSymbolContainer"]
    SLATE = MIME::Types["application/slate"]
    SMIL = MIME::Types["application/smil"]
    SMIL_XML = MIME::Types["application/smil+xml"]
    SOAP_FASTINFOSET = MIME::Types["application/soap+fastinfoset"]
    SOAP_XML = MIME::Types["application/soap+xml"]
    SPARQL_QUERY = MIME::Types["application/sparql-query"]
    SPARQL_RESULTS_XML = MIME::Types["application/sparql-results+xml"]
    SPIRITS_EVENT_XML = MIME::Types["application/spirits-event+xml"]
    SRGS = MIME::Types["application/srgs"]
    SRGS_XML = MIME::Types["application/srgs+xml"]
    SSML_XML = MIME::Types["application/ssml+xml"]
    TIMESTAMP_QUERY = MIME::Types["application/timestamp-query"]
    TIMESTAMP_REPLY = MIME::Types["application/timestamp-reply"]
    TVE_TRIGGER = MIME::Types["application/tve-trigger"]
    ULPFEC = MIME::Types["application/ulpfec"]
    VEMMI = MIME::Types["application/vemmi"]
    VND_3GPP_BSF_XML = MIME::Types["application/vnd.3gpp.bsf+xml"]
    VND_3GPP_PIC_BW_LARGE = MIME::Types["application/vnd.3gpp.pic-bw-large"]
    VND_3GPP_PIC_BW_SMALL = MIME::Types["application/vnd.3gpp.pic-bw-small"]
    VND_3GPP_PIC_BW_VAR = MIME::Types["application/vnd.3gpp.pic-bw-var"]
    VND_3GPP_SMS = MIME::Types["application/vnd.3gpp.sms"]
    VND_3GPP2_BCMCSINFO_XML = MIME::Types["application/vnd.3gpp2.bcmcsinfo+xml"]
    VND_3GPP2_SMS = MIME::Types["application/vnd.3gpp2.sms"]
    VND_3GPP2_TCAP = MIME::Types["application/vnd.3gpp2.tcap"]
    VND_3M_POST_IT_NOTES = MIME::Types["application/vnd.3M.Post-it-Notes"]
    VND_ACCPAC_SIMPLY_ASO = MIME::Types["application/vnd.accpac.simply.aso"]
    VND_ACCPAC_SIMPLY_IMP = MIME::Types["application/vnd.accpac.simply.imp"]
    VND_ACUCOBOL = MIME::Types["application/vnd.acucobol"]
    VND_ACUCORP = MIME::Types["application/vnd.acucorp"]
    VND_ADOBE_XDP_XML = MIME::Types["application/vnd.adobe.xdp+xml"]
    VND_ADOBE_XFDF = MIME::Types["application/vnd.adobe.xfdf"]
    VND_AETHER_IMP = MIME::Types["application/vnd.aether.imp"]
    VND_AMERICANDYNAMICS_ACC = MIME::Types["application/vnd.americandynamics.acc"]
    VND_AMIGA_AMI = MIME::Types["application/vnd.amiga.ami"]
    VND_ANSER_WEB_CERTIFICATE_ISSUE_INITIATION = MIME::Types["application/vnd.anser-web-certificate-issue-initiation"]
    VND_ANTIX_GAME_COMPONENT = MIME::Types["application/vnd.antix.game-component"]
    VND_APPLE_INSTALLER_XML = MIME::Types["application/vnd.apple.installer+xml"]
    VND_ARASTRA_SWI = MIME::Types["application/vnd.arastra.swi"]
    VND_AUDIOGRAPH = MIME::Types["application/vnd.audiograph"]
    VND_AUTOPACKAGE = MIME::Types["application/vnd.autopackage"]
    VND_AVISTAR_XML = MIME::Types["application/vnd.avistar+xml"]
    VND_BLUEICE_MULTIPASS = MIME::Types["application/vnd.blueice.multipass"]
    VND_BMI = MIME::Types["application/vnd.bmi"]
    VND_BUSINESSOBJECTS = MIME::Types["application/vnd.businessobjects"]
    VND_CAB_JSCRIPT = MIME::Types["application/vnd.cab-jscript"]
    VND_CANON_CPDL = MIME::Types["application/vnd.canon-cpdl"]
    VND_CANON_LIPS = MIME::Types["application/vnd.canon-lips"]
    VND_CENDIO_THINLINC_CLIENTCONF = MIME::Types["application/vnd.cendio.thinlinc.clientconf"]
    VND_CHEMDRAW_XML = MIME::Types["application/vnd.chemdraw+xml"]
    VND_CHIPNUTS_KARAOKE_MMD = MIME::Types["application/vnd.chipnuts.karaoke-mmd"]
    VND_CINDERELLA = MIME::Types["application/vnd.cinderella"]
    VND_CIRPACK_ISDN_EXT = MIME::Types["application/vnd.cirpack.isdn-ext"]
    VND_CLAYMORE = MIME::Types["application/vnd.claymore"]
    VND_CLONK_C4GROUP = MIME::Types["application/vnd.clonk.c4group"]
    VND_COMMERCE_BATTELLE = MIME::Types["application/vnd.commerce-battelle"]
    VND_COMMONSPACE = MIME::Types["application/vnd.commonspace"]
    VND_COSMOCALLER = MIME::Types["application/vnd.cosmocaller"]
    VND_CONTACT_CMSG = MIME::Types["application/vnd.contact.cmsg"]
    VND_CRICK_CLICKER = MIME::Types["application/vnd.crick.clicker"]
    VND_CRICK_CLICKER_KEYBOARD = MIME::Types["application/vnd.crick.clicker.keyboard"]
    VND_CRICK_CLICKER_PALETTE = MIME::Types["application/vnd.crick.clicker.palette"]
    VND_CRICK_CLICKER_TEMPLATE = MIME::Types["application/vnd.crick.clicker.template"]
    VND_CRICK_CLICKER_WORDBANK = MIME::Types["application/vnd.crick.clicker.wordbank"]
    VND_CRITICALTOOLS_WBS_XML = MIME::Types["application/vnd.criticaltools.wbs+xml"]
    VND_CTC_POSML = MIME::Types["application/vnd.ctc-posml"]
    VND_CTCT_WS_XML = MIME::Types["application/vnd.ctct.ws+xml"]
    VND_CUPS_PDF = MIME::Types["application/vnd.cups-pdf"]
    VND_CUPS_POSTSCRIPT = MIME::Types["application/vnd.cups-postscript"]
    VND_CUPS_PPD = MIME::Types["application/vnd.cups-ppd"]
    VND_CUPS_RASTER = MIME::Types["application/vnd.cups-raster"]
    VND_CUPS_RAW = MIME::Types["application/vnd.cups-raw"]
    VND_CURL = MIME::Types["application/vnd.curl"]
    VND_CYBANK = MIME::Types["application/vnd.cybank"]
    VND_DATA_VISION_RDZ = MIME::Types["application/vnd.data-vision.rdz"]
    VND_DENOVO_FCSELAYOUT_LINK = MIME::Types["application/vnd.denovo.fcselayout-link"]
    VND_DNA = MIME::Types["application/vnd.dna"]
    VND_DPGRAPH = MIME::Types["application/vnd.dpgraph"]
    VND_DREAMFACTORY = MIME::Types["application/vnd.dreamfactory"]
    VND_DVB_ESGCONTAINER = MIME::Types["application/vnd.dvb.esgcontainer"]
    VND_DVB_IPDCESGACCESS = MIME::Types["application/vnd.dvb.ipdcesgaccess"]
    VND_DVB_IPTV_ALFEC_BASE = MIME::Types["application/vnd.dvb.iptv.alfec-base"]
    VND_DVB_IPTV_ALFEC_ENHANCEMENT = MIME::Types["application/vnd.dvb.iptv.alfec-enhancement"]
    VND_DXR = MIME::Types["application/vnd.dxr"]
    VND_ECDIS_UPDATE = MIME::Types["application/vnd.ecdis-update"]
    VND_ECOWIN_CHART = MIME::Types["application/vnd.ecowin.chart"]
    VND_ECOWIN_FILEREQUEST = MIME::Types["application/vnd.ecowin.filerequest"]
    VND_ECOWIN_FILEUPDATE = MIME::Types["application/vnd.ecowin.fileupdate"]
    VND_ECOWIN_SERIES = MIME::Types["application/vnd.ecowin.series"]
    VND_ECOWIN_SERIESREQUEST = MIME::Types["application/vnd.ecowin.seriesrequest"]
    VND_ECOWIN_SERIESUPDATE = MIME::Types["application/vnd.ecowin.seriesupdate"]
    VND_ENLIVEN = MIME::Types["application/vnd.enliven"]
    VND_EPSON_ESF = MIME::Types["application/vnd.epson.esf"]
    VND_EPSON_MSF = MIME::Types["application/vnd.epson.msf"]
    VND_EPSON_QUICKANIME = MIME::Types["application/vnd.epson.quickanime"]
    VND_EPSON_SALT = MIME::Types["application/vnd.epson.salt"]
    VND_EPSON_SSF = MIME::Types["application/vnd.epson.ssf"]
    VND_ERICSSON_QUICKCALL = MIME::Types["application/vnd.ericsson.quickcall"]
    VND_ESZIGNO3_XML = MIME::Types["application/vnd.eszigno3+xml"]
    VND_EUDORA_DATA = MIME::Types["application/vnd.eudora.data"]
    VND_EZPIX_ALBUM = MIME::Types["application/vnd.ezpix-album"]
    VND_EZPIX_PACKAGE = MIME::Types["application/vnd.ezpix-package"]
    VND_F_SECURE_MOBILE = MIME::Types["application/vnd.f-secure.mobile"]
    VND_FDF = MIME::Types["application/vnd.fdf"]
    VND_FFSNS = MIME::Types["application/vnd.ffsns"]
    VND_FINTS = MIME::Types["application/vnd.fints"]
    VND_FLOGRAPHIT = MIME::Types["application/vnd.FloGraphIt"]
    VND_FLUXTIME_CLIP = MIME::Types["application/vnd.fluxtime.clip"]
    VND_FONT_FONTFORGE_SFD = MIME::Types["application/vnd.font-fontforge-sfd"]
    VND_FRAMEMAKER = MIME::Types["application/vnd.framemaker"]
    VND_FROGANS_FNC = MIME::Types["application/vnd.frogans.fnc"]
    VND_FROGANS_LTF = MIME::Types["application/vnd.frogans.ltf"]
    VND_FSC_WEBLAUNCH = MIME::Types["application/vnd.fsc.weblaunch"]
    VND_FUJITSU_OASYS = MIME::Types["application/vnd.fujitsu.oasys"]
    VND_FUJITSU_OASYS2 = MIME::Types["application/vnd.fujitsu.oasys2"]
    VND_FUJITSU_OASYS3 = MIME::Types["application/vnd.fujitsu.oasys3"]
    VND_FUJITSU_OASYSGP = MIME::Types["application/vnd.fujitsu.oasysgp"]
    VND_FUJITSU_OASYSPRS = MIME::Types["application/vnd.fujitsu.oasysprs"]
    VND_FUJIXEROX_ART4 = MIME::Types["application/vnd.fujixerox.ART4"]
    VND_FUJIXEROX_ART_EX = MIME::Types["application/vnd.fujixerox.ART-EX"]
    VND_FUJIXEROX_DDD = MIME::Types["application/vnd.fujixerox.ddd"]
    VND_FUJIXEROX_DOCUWORKS = MIME::Types["application/vnd.fujixerox.docuworks"]
    VND_FUJIXEROX_DOCUWORKS_BINDER = MIME::Types["application/vnd.fujixerox.docuworks.binder"]
    VND_FUJIXEROX_HBPL = MIME::Types["application/vnd.fujixerox.HBPL"]
    VND_FUT_MISNET = MIME::Types["application/vnd.fut-misnet"]
    VND_FUZZYSHEET = MIME::Types["application/vnd.fuzzysheet"]
    VND_GENOMATIX_TUXEDO = MIME::Types["application/vnd.genomatix.tuxedo"]
    VND_GMX = MIME::Types["application/vnd.gmx"]
    VND_GOOGLE_EARTH_KML_XML = MIME::Types["application/vnd.google-earth.kml+xml"]
    VND_GOOGLE_EARTH_KMZ = MIME::Types["application/vnd.google-earth.kmz"]
    VND_GRAFEQ = MIME::Types["application/vnd.grafeq"]
    VND_GRIDMP = MIME::Types["application/vnd.gridmp"]
    VND_GROOVE_ACCOUNT = MIME::Types["application/vnd.groove-account"]
    VND_GROOVE_HELP = MIME::Types["application/vnd.groove-help"]
    VND_GROOVE_IDENTITY_MESSAGE = MIME::Types["application/vnd.groove-identity-message"]
    VND_GROOVE_INJECTOR = MIME::Types["application/vnd.groove-injector"]
    VND_GROOVE_TOOL_MESSAGE = MIME::Types["application/vnd.groove-tool-message"]
    VND_GROOVE_TOOL_TEMPLATE = MIME::Types["application/vnd.groove-tool-template"]
    VND_GROOVE_VCARD = MIME::Types["application/vnd.groove-vcard"]
    VND_HANDHELD_ENTERTAINMENT_XML = MIME::Types["application/vnd.HandHeld-Entertainment+xml"]
    VND_HBCI = MIME::Types["application/vnd.hbci"]
    VND_HCL_BIREPORTS = MIME::Types["application/vnd.hcl-bireports"]
    VND_HHE_LESSON_PLAYER = MIME::Types["application/vnd.hhe.lesson-player"]
    VND_HP_HPGL = MIME::Types["application/vnd.hp-HPGL"]
    VND_HP_HPID = MIME::Types["application/vnd.hp-hpid"]
    VND_HP_HPS = MIME::Types["application/vnd.hp-hps"]
    VND_HP_JLYT = MIME::Types["application/vnd.hp-jlyt"]
    VND_HP_PCL = MIME::Types["application/vnd.hp-PCL"]
    VND_HP_PCLXL = MIME::Types["application/vnd.hp-PCLXL"]
    VND_HTTPHONE = MIME::Types["application/vnd.httphone"]
    VND_HYDROSTATIX_SOF_DATA = MIME::Types["application/vnd.hydrostatix.sof-data"]
    VND_HZN_3D_CROSSWORD = MIME::Types["application/vnd.hzn-3d-crossword"]
    VND_IBM_AFPLINEDATA = MIME::Types["application/vnd.ibm.afplinedata"]
    VND_IBM_ELECTRONIC_MEDIA = MIME::Types["application/vnd.ibm.electronic-media"]
    VND_IBM_MINIPAY = MIME::Types["application/vnd.ibm.MiniPay"]
    VND_IBM_MODCAP = MIME::Types["application/vnd.ibm.modcap"]
    VND_IBM_RIGHTS_MANAGEMENT = MIME::Types["application/vnd.ibm.rights-management"]
    VND_IBM_SECURE_CONTAINER = MIME::Types["application/vnd.ibm.secure-container"]
    VND_ICCPROFILE = MIME::Types["application/vnd.iccprofile"]
    VND_IGLOADER = MIME::Types["application/vnd.igloader"]
    VND_IMMERVISION_IVP = MIME::Types["application/vnd.immervision-ivp"]
    VND_IMMERVISION_IVU = MIME::Types["application/vnd.immervision-ivu"]
    VND_INFORMEDCONTROL_RMS_XML = MIME::Types["application/vnd.informedcontrol.rms+xml"]
    VND_INFORMIX_VISIONARY = MIME::Types["application/vnd.informix-visionary"]
    VND_INTERCON_FORMNET = MIME::Types["application/vnd.intercon.formnet"]
    VND_INTERTRUST_DIGIBOX = MIME::Types["application/vnd.intertrust.digibox"]
    VND_INTERTRUST_NNCP = MIME::Types["application/vnd.intertrust.nncp"]
    VND_INTU_QBO = MIME::Types["application/vnd.intu.qbo"]
    VND_INTU_QFX = MIME::Types["application/vnd.intu.qfx"]
    VND_IPTC_G2_CONCEPTITEM_XML = MIME::Types["application/vnd.iptc.g2.conceptitem+xml"]
    VND_IPTC_G2_KNOWLEDGEITEM_XML = MIME::Types["application/vnd.iptc.g2.knowledgeitem+xml"]
    VND_IPTC_G2_NEWSITEM_XML = MIME::Types["application/vnd.iptc.g2.newsitem+xml"]
    VND_IPTC_G2_PACKAGEITEM_XML = MIME::Types["application/vnd.iptc.g2.packageitem+xml"]
    VND_IPUNPLUGGED_RCPROFILE = MIME::Types["application/vnd.ipunplugged.rcprofile"]
    VND_IREPOSITORY_PACKAGE_XML = MIME::Types["application/vnd.irepository.package+xml"]
    VND_IS_XPR = MIME::Types["application/vnd.is-xpr"]
    VND_JAM = MIME::Types["application/vnd.jam"]
    VND_JAPANNET_DIRECTORY_SERVICE = MIME::Types["application/vnd.japannet-directory-service"]
    VND_JAPANNET_JPNSTORE_WAKEUP = MIME::Types["application/vnd.japannet-jpnstore-wakeup"]
    VND_JAPANNET_PAYMENT_WAKEUP = MIME::Types["application/vnd.japannet-payment-wakeup"]
    VND_JAPANNET_REGISTRATION = MIME::Types["application/vnd.japannet-registration"]
    VND_JAPANNET_REGISTRATION_WAKEUP = MIME::Types["application/vnd.japannet-registration-wakeup"]
    VND_JAPANNET_SETSTORE_WAKEUP = MIME::Types["application/vnd.japannet-setstore-wakeup"]
    VND_JAPANNET_VERIFICATION = MIME::Types["application/vnd.japannet-verification"]
    VND_JAPANNET_VERIFICATION_WAKEUP = MIME::Types["application/vnd.japannet-verification-wakeup"]
    VND_JCP_JAVAME_MIDLET_RMS = MIME::Types["application/vnd.jcp.javame.midlet-rms"]
    VND_JISP = MIME::Types["application/vnd.jisp"]
    VND_JOOST_JODA_ARCHIVE = MIME::Types["application/vnd.joost.joda-archive"]
    VND_KAHOOTZ = MIME::Types["application/vnd.kahootz"]
    VND_KDE_KARBON = MIME::Types["application/vnd.kde.karbon"]
    VND_KDE_KCHART = MIME::Types["application/vnd.kde.kchart"]
    VND_KDE_KFORMULA = MIME::Types["application/vnd.kde.kformula"]
    VND_KDE_KIVIO = MIME::Types["application/vnd.kde.kivio"]
    VND_KDE_KONTOUR = MIME::Types["application/vnd.kde.kontour"]
    VND_KDE_KPRESENTER = MIME::Types["application/vnd.kde.kpresenter"]
    VND_KDE_KSPREAD = MIME::Types["application/vnd.kde.kspread"]
    VND_KDE_KWORD = MIME::Types["application/vnd.kde.kword"]
    VND_KENAMEAAPP = MIME::Types["application/vnd.kenameaapp"]
    VND_KIDSPIRATION = MIME::Types["application/vnd.kidspiration"]
    VND_KINAR = MIME::Types["application/vnd.Kinar"]
    VND_KOAN = MIME::Types["application/vnd.koan"]
    VND_KODAK_DESCRIPTOR = MIME::Types["application/vnd.kodak-descriptor"]
    VND_LIBERTY_REQUEST_XML = MIME::Types["application/vnd.liberty-request+xml"]
    VND_LLAMAGRAPHICS_LIFE_BALANCE_DESKTOP = MIME::Types["application/vnd.llamagraphics.life-balance.desktop"]
    VND_LLAMAGRAPHICS_LIFE_BALANCE_EXCHANGE_XML = MIME::Types["application/vnd.llamagraphics.life-balance.exchange+xml"]
    VND_LOTUS_1_2_3 = MIME::Types["application/vnd.lotus-1-2-3"]
    VND_LOTUS_APPROACH = MIME::Types["application/vnd.lotus-approach"]
    VND_LOTUS_FREELANCE = MIME::Types["application/vnd.lotus-freelance"]
    VND_LOTUS_NOTES = MIME::Types["application/vnd.lotus-notes"]
    VND_LOTUS_ORGANIZER = MIME::Types["application/vnd.lotus-organizer"]
    VND_LOTUS_SCREENCAM = MIME::Types["application/vnd.lotus-screencam"]
    VND_LOTUS_WORDPRO = MIME::Types["application/vnd.lotus-wordpro"]
    VND_MACPORTS_PORTPKG = MIME::Types["application/vnd.macports.portpkg"]
    VND_MARLIN_DRM_ACTIONTOKEN_XML = MIME::Types["application/vnd.marlin.drm.actiontoken+xml"]
    VND_MARLIN_DRM_CONFTOKEN_XML = MIME::Types["application/vnd.marlin.drm.conftoken+xml"]
    VND_MARLIN_DRM_LICENSE_XML = MIME::Types["application/vnd.marlin.drm.license+xml"]
    VND_MARLIN_DRM_MDCF = MIME::Types["application/vnd.marlin.drm.mdcf"]
    VND_MCD = MIME::Types["application/vnd.mcd"]
    VND_MEDCALCDATA = MIME::Types["application/vnd.medcalcdata"]
    VND_MEDIASTATION_CDKEY = MIME::Types["application/vnd.mediastation.cdkey"]
    VND_MERIDIAN_SLINGSHOT = MIME::Types["application/vnd.meridian-slingshot"]
    VND_MFER = MIME::Types["application/vnd.MFER"]
    VND_MFMP = MIME::Types["application/vnd.mfmp"]
    VND_MICROGRAFX_FLO = MIME::Types["application/vnd.micrografx.flo"]
    VND_MICROGRAFX_IGX = MIME::Types["application/vnd.micrografx.igx"]
    VND_MIF = MIME::Types["application/vnd.mif"]
    VND_MINISOFT_HP3000_SAVE = MIME::Types["application/vnd.minisoft-hp3000-save"]
    VND_MITSUBISHI_MISTY_GUARD_TRUSTWEB = MIME::Types["application/vnd.mitsubishi.misty-guard.trustweb"]
    VND_MOBIUS_DAF = MIME::Types["application/vnd.Mobius.DAF"]
    VND_MOBIUS_DIS = MIME::Types["application/vnd.Mobius.DIS"]
    VND_MOBIUS_MBK = MIME::Types["application/vnd.Mobius.MBK"]
    VND_MOBIUS_MQY = MIME::Types["application/vnd.Mobius.MQY"]
    VND_MOBIUS_MSL = MIME::Types["application/vnd.Mobius.MSL"]
    VND_MOBIUS_PLC = MIME::Types["application/vnd.Mobius.PLC"]
    VND_MOBIUS_TXF = MIME::Types["application/vnd.Mobius.TXF"]
    VND_MOPHUN_APPLICATION = MIME::Types["application/vnd.mophun.application"]
    VND_MOPHUN_CERTIFICATE = MIME::Types["application/vnd.mophun.certificate"]
    VND_MOTOROLA_FLEXSUITE = MIME::Types["application/vnd.motorola.flexsuite"]
    VND_MOTOROLA_FLEXSUITE_ADSI = MIME::Types["application/vnd.motorola.flexsuite.adsi"]
    VND_MOTOROLA_FLEXSUITE_FIS = MIME::Types["application/vnd.motorola.flexsuite.fis"]
    VND_MOTOROLA_FLEXSUITE_GOTAP = MIME::Types["application/vnd.motorola.flexsuite.gotap"]
    VND_MOTOROLA_FLEXSUITE_KMR = MIME::Types["application/vnd.motorola.flexsuite.kmr"]
    VND_MOTOROLA_FLEXSUITE_TTC = MIME::Types["application/vnd.motorola.flexsuite.ttc"]
    VND_MOTOROLA_FLEXSUITE_WEM = MIME::Types["application/vnd.motorola.flexsuite.wem"]
    VND_MOTOROLA_IPRM = MIME::Types["application/vnd.motorola.iprm"]
    VND_MOZILLA_XUL_XML = MIME::Types["application/vnd.mozilla.xul+xml"]
    VND_MS_ARTGALRY = MIME::Types["application/vnd.ms-artgalry"]
    VND_MS_ASF = MIME::Types["application/vnd.ms-asf"]
    VND_MS_CAB_COMPRESSED = MIME::Types["application/vnd.ms-cab-compressed"]
    VND_MSEQ = MIME::Types["application/vnd.mseq"]
    VND_MS_EXCEL = MIME::Types["application/vnd.ms-excel"]
    VND_MS_FONTOBJECT = MIME::Types["application/vnd.ms-fontobject"]
    VND_MS_HTMLHELP = MIME::Types["application/vnd.ms-htmlhelp"]
    VND_MSIGN = MIME::Types["application/vnd.msign"]
    VND_MS_IMS = MIME::Types["application/vnd.ms-ims"]
    VND_MS_LRM = MIME::Types["application/vnd.ms-lrm"]
    VND_MS_PLAYREADY_INITIATOR_XML = MIME::Types["application/vnd.ms-playready.initiator+xml"]
    VND_MS_POWERPOINT = MIME::Types["application/vnd.ms-powerpoint"]
    VND_MS_PROJECT = MIME::Types["application/vnd.ms-project"]
    VND_MS_TNEF = MIME::Types["application/vnd.ms-tnef"]
    VND_MS_WMDRM_LIC_CHLG_REQ = MIME::Types["application/vnd.ms-wmdrm.lic-chlg-req"]
    VND_MS_WMDRM_LIC_RESP = MIME::Types["application/vnd.ms-wmdrm.lic-resp"]
    VND_MS_WMDRM_METER_CHLG_REQ = MIME::Types["application/vnd.ms-wmdrm.meter-chlg-req"]
    VND_MS_WMDRM_METER_RESP = MIME::Types["application/vnd.ms-wmdrm.meter-resp"]
    VND_MS_WORKS = MIME::Types["application/vnd.ms-works"]
    VND_MS_WPL = MIME::Types["application/vnd.ms-wpl"]
    VND_MS_XPSDOCUMENT = MIME::Types["application/vnd.ms-xpsdocument"]
    VND_MULTIAD_CREATOR = MIME::Types["application/vnd.multiad.creator"]
    VND_MULTIAD_CREATOR_CIF = MIME::Types["application/vnd.multiad.creator.cif"]
    VND_MUSICIAN = MIME::Types["application/vnd.musician"]
    VND_MUSIC_NIFF = MIME::Types["application/vnd.music-niff"]
    VND_MUVEE_STYLE = MIME::Types["application/vnd.muvee.style"]
    VND_NCD_CONTROL = MIME::Types["application/vnd.ncd.control"]
    VND_NCD_REFERENCE = MIME::Types["application/vnd.ncd.reference"]
    VND_NERVANA = MIME::Types["application/vnd.nervana"]
    VND_NETFPX = MIME::Types["application/vnd.netfpx"]
    VND_NEUROLANGUAGE_NLU = MIME::Types["application/vnd.neurolanguage.nlu"]
    VND_NOBLENET_DIRECTORY = MIME::Types["application/vnd.noblenet-directory"]
    VND_NOBLENET_SEALER = MIME::Types["application/vnd.noblenet-sealer"]
    VND_NOBLENET_WEB = MIME::Types["application/vnd.noblenet-web"]
    VND_NOKIA_CATALOGS = MIME::Types["application/vnd.nokia.catalogs"]
    VND_NOKIA_CONML_WBXML = MIME::Types["application/vnd.nokia.conml+wbxml"]
    VND_NOKIA_CONML_XML = MIME::Types["application/vnd.nokia.conml+xml"]
    VND_NOKIA_IPTV_CONFIG_XML = MIME::Types["application/vnd.nokia.iptv.config+xml"]
    VND_NOKIA_ISDS_RADIO_PRESETS = MIME::Types["application/vnd.nokia.iSDS-radio-presets"]
    VND_NOKIA_LANDMARK_WBXML = MIME::Types["application/vnd.nokia.landmark+wbxml"]
    VND_NOKIA_LANDMARK_XML = MIME::Types["application/vnd.nokia.landmark+xml"]
    VND_NOKIA_LANDMARKCOLLECTION_XML = MIME::Types["application/vnd.nokia.landmarkcollection+xml"]
    VND_NOKIA_NCD = MIME::Types["application/vnd.nokia.ncd"]
    VND_NOKIA_N_GAGE_AC_XML = MIME::Types["application/vnd.nokia.n-gage.ac+xml"]
    VND_NOKIA_N_GAGE_DATA = MIME::Types["application/vnd.nokia.n-gage.data"]
    VND_NOKIA_N_GAGE_SYMBIAN_INSTALL = MIME::Types["application/vnd.nokia.n-gage.symbian.install"]
    VND_NOKIA_PCD_WBXML = MIME::Types["application/vnd.nokia.pcd+wbxml"]
    VND_NOKIA_PCD_XML = MIME::Types["application/vnd.nokia.pcd+xml"]
    VND_NOKIA_RADIO_PRESET = MIME::Types["application/vnd.nokia.radio-preset"]
    VND_NOKIA_RADIO_PRESETS = MIME::Types["application/vnd.nokia.radio-presets"]
    VND_NOVADIGM_EDM = MIME::Types["application/vnd.novadigm.EDM"]
    VND_NOVADIGM_EDX = MIME::Types["application/vnd.novadigm.EDX"]
    VND_NOVADIGM_EXT = MIME::Types["application/vnd.novadigm.EXT"]
    VND_OASIS_OPENDOCUMENT_CHART = MIME::Types["application/vnd.oasis.opendocument.chart"]
    VND_OASIS_OPENDOCUMENT_CHART_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.chart-template"]
    VND_OASIS_OPENDOCUMENT_FORMULA = MIME::Types["application/vnd.oasis.opendocument.formula"]
    VND_OASIS_OPENDOCUMENT_FORMULA_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.formula-template"]
    VND_OASIS_OPENDOCUMENT_GRAPHICS = MIME::Types["application/vnd.oasis.opendocument.graphics"]
    VND_OASIS_OPENDOCUMENT_GRAPHICS_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.graphics-template"]
    VND_OASIS_OPENDOCUMENT_IMAGE = MIME::Types["application/vnd.oasis.opendocument.image"]
    VND_OASIS_OPENDOCUMENT_IMAGE_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.image-template"]
    VND_OASIS_OPENDOCUMENT_PRESENTATION = MIME::Types["application/vnd.oasis.opendocument.presentation"]
    VND_OASIS_OPENDOCUMENT_PRESENTATION_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.presentation-template"]
    VND_OASIS_OPENDOCUMENT_SPREADSHEET = MIME::Types["application/vnd.oasis.opendocument.spreadsheet"]
    VND_OASIS_OPENDOCUMENT_SPREADSHEET_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.spreadsheet-template"]
    VND_OASIS_OPENDOCUMENT_TEXT = MIME::Types["application/vnd.oasis.opendocument.text"]
    VND_OASIS_OPENDOCUMENT_TEXT_MASTER = MIME::Types["application/vnd.oasis.opendocument.text-master"]
    VND_OASIS_OPENDOCUMENT_TEXT_TEMPLATE = MIME::Types["application/vnd.oasis.opendocument.text-template"]
    VND_OASIS_OPENDOCUMENT_TEXT_WEB = MIME::Types["application/vnd.oasis.opendocument.text-web"]
    VND_OBN = MIME::Types["application/vnd.obn"]
    VND_OLPC_SUGAR = MIME::Types["application/vnd.olpc-sugar"]
    VND_OMA_BCAST_ASSOCIATED_PROCEDURE_PARAMETER_XML = MIME::Types["application/vnd.oma.bcast.associated-procedure-parameter+xml"]
    VND_OMA_BCAST_DRM_TRIGGER_XML = MIME::Types["application/vnd.oma.bcast.drm-trigger+xml"]
    VND_OMA_BCAST_IMD_XML = MIME::Types["application/vnd.oma.bcast.imd+xml"]
    VND_OMA_BCAST_LTKM = MIME::Types["application/vnd.oma.bcast.ltkm"]
    VND_OMA_BCAST_NOTIFICATION_XML = MIME::Types["application/vnd.oma.bcast.notification+xml"]
    VND_OMA_BCAST_PROVISIONINGTRIGGER = MIME::Types["application/vnd.oma.bcast.provisioningtrigger"]
    VND_OMA_BCAST_SGBOOT = MIME::Types["application/vnd.oma.bcast.sgboot"]
    VND_OMA_BCAST_SGDD_XML = MIME::Types["application/vnd.oma.bcast.sgdd+xml"]
    VND_OMA_BCAST_SGDU = MIME::Types["application/vnd.oma.bcast.sgdu"]
    VND_OMA_BCAST_SIMPLE_SYMBOL_CONTAINER = MIME::Types["application/vnd.oma.bcast.simple-symbol-container"]
    VND_OMA_BCAST_SMARTCARD_TRIGGER_XML = MIME::Types["application/vnd.oma.bcast.smartcard-trigger+xml"]
    VND_OMA_BCAST_SPROV_XML = MIME::Types["application/vnd.oma.bcast.sprov+xml"]
    VND_OMA_BCAST_STKM = MIME::Types["application/vnd.oma.bcast.stkm"]
    VND_OMA_DCD = MIME::Types["application/vnd.oma.dcd"]
    VND_OMA_DCDC = MIME::Types["application/vnd.oma.dcdc"]
    VND_OMA_DD2_XML = MIME::Types["application/vnd.oma.dd2+xml"]
    VND_OMA_DRM_RISD_XML = MIME::Types["application/vnd.oma.drm.risd+xml"]
    VND_OMA_GROUP_USAGE_LIST_XML = MIME::Types["application/vnd.oma.group-usage-list+xml"]
    VND_OMA_POC_DETAILED_PROGRESS_REPORT_XML = MIME::Types["application/vnd.oma.poc.detailed-progress-report+xml"]
    VND_OMA_POC_FINAL_REPORT_XML = MIME::Types["application/vnd.oma.poc.final-report+xml"]
    VND_OMA_POC_GROUPS_XML = MIME::Types["application/vnd.oma.poc.groups+xml"]
    VND_OMA_POC_INVOCATION_DESCRIPTOR_XML = MIME::Types["application/vnd.oma.poc.invocation-descriptor+xml"]
    VND_OMA_POC_OPTIMIZED_PROGRESS_REPORT_XML = MIME::Types["application/vnd.oma.poc.optimized-progress-report+xml"]
    VND_OMA_XCAP_DIRECTORY_XML = MIME::Types["application/vnd.oma.xcap-directory+xml"]
    VND_OMADS_EMAIL_XML = MIME::Types["application/vnd.omads-email+xml"]
    VND_OMADS_FILE_XML = MIME::Types["application/vnd.omads-file+xml"]
    VND_OMADS_FOLDER_XML = MIME::Types["application/vnd.omads-folder+xml"]
    VND_OMALOC_SUPL_INIT = MIME::Types["application/vnd.omaloc-supl-init"]
    VND_OMA_SCWS_CONFIG = MIME::Types["application/vnd.oma-scws-config"]
    VND_OMA_SCWS_HTTP_REQUEST = MIME::Types["application/vnd.oma-scws-http-request"]
    VND_OMA_SCWS_HTTP_RESPONSE = MIME::Types["application/vnd.oma-scws-http-response"]
    VND_OPENOFFICEORG_EXTENSION = MIME::Types["application/vnd.openofficeorg.extension"]
    VND_OSA_NETDEPLOY = MIME::Types["application/vnd.osa.netdeploy"]
    VND_OSGI_BUNDLE = MIME::Types["application/vnd.osgi.bundle"]
    VND_OSGI_DP = MIME::Types["application/vnd.osgi.dp"]
    VND_OTPS_CT_KIP_XML = MIME::Types["application/vnd.otps.ct-kip+xml"]
    VND_PALM = MIME::Types["application/vnd.palm"]
    VND_PAOS_XML = MIME::Types["application/vnd.paos.xml"]
    VND_PG_FORMAT = MIME::Types["application/vnd.pg.format"]
    VND_PG_OSASLI = MIME::Types["application/vnd.pg.osasli"]
    VND_PIACCESS_APPLICATION_LICENCE = MIME::Types["application/vnd.piaccess.application-licence"]
    VND_PICSEL = MIME::Types["application/vnd.picsel"]
    VND_POC_GROUP_ADVERTISEMENT_XML = MIME::Types["application/vnd.poc.group-advertisement+xml"]
    VND_POCKETLEARN = MIME::Types["application/vnd.pocketlearn"]
    VND_POWERBUILDER6 = MIME::Types["application/vnd.powerbuilder6"]
    VND_POWERBUILDER6_S = MIME::Types["application/vnd.powerbuilder6-s"]
    VND_POWERBUILDER7 = MIME::Types["application/vnd.powerbuilder7"]
    VND_POWERBUILDER75 = MIME::Types["application/vnd.powerbuilder75"]
    VND_POWERBUILDER75_S = MIME::Types["application/vnd.powerbuilder75-s"]
    VND_POWERBUILDER7_S = MIME::Types["application/vnd.powerbuilder7-s"]
    VND_PREMINET = MIME::Types["application/vnd.preminet"]
    VND_PREVIEWSYSTEMS_BOX = MIME::Types["application/vnd.previewsystems.box"]
    VND_PROTEUS_MAGAZINE = MIME::Types["application/vnd.proteus.magazine"]
    VND_PUBLISHARE_DELTA_TREE = MIME::Types["application/vnd.publishare-delta-tree"]
    VND_PVI_PTID1 = MIME::Types["application/vnd.pvi.ptid1"]
    VND_PWG_MULTIPLEXED = MIME::Types["application/vnd.pwg-multiplexed"]
    VND_PWG_XHTML_PRINT_XML = MIME::Types["application/vnd.pwg-xhtml-print+xml"]
    VND_QUALCOMM_BREW_APP_RES = MIME::Types["application/vnd.qualcomm.brew-app-res"]
    VND_QUARK_QUARKXPRESS = MIME::Types["application/vnd.Quark.QuarkXPress"]
    VND_RAPID = MIME::Types["application/vnd.rapid"]
    VND_RECORDARE_MUSICXML = MIME::Types["application/vnd.recordare.musicxml"]
    VND_RECORDARE_MUSICXML_XML = MIME::Types["application/vnd.recordare.musicxml+xml"]
    VND_RENLEARN_RLPRINT = MIME::Types["application/vnd.RenLearn.rlprint"]
    VND_ROUTE66_LINK66_XML = MIME::Types["application/vnd.route66.link66+xml"]
    VND_RUCKUS_DOWNLOAD = MIME::Types["application/vnd.ruckus.download"]
    VND_S3SMS = MIME::Types["application/vnd.s3sms"]
    VND_SBM_CID = MIME::Types["application/vnd.sbm.cid"]
    VND_SBM_MID2 = MIME::Types["application/vnd.sbm.mid2"]
    VND_SCRIBUS = MIME::Types["application/vnd.scribus"]
    VND_SEALED_3DF = MIME::Types["application/vnd.sealed.3df"]
    VND_SEALED_CSF = MIME::Types["application/vnd.sealed.csf"]
    VND_SEALED_DOC = MIME::Types["application/vnd.sealed.doc"]
    VND_SEALED_EML = MIME::Types["application/vnd.sealed.eml"]
    VND_SEALED_MHT = MIME::Types["application/vnd.sealed.mht"]
    VND_SEALED_NET = MIME::Types["application/vnd.sealed.net"]
    VND_SEALED_PPT = MIME::Types["application/vnd.sealed.ppt"]
    VND_SEALED_TIFF = MIME::Types["application/vnd.sealed.tiff"]
    VND_SEALED_XLS = MIME::Types["application/vnd.sealed.xls"]
    VND_SEALEDMEDIA_SOFTSEAL_HTML = MIME::Types["application/vnd.sealedmedia.softseal.html"]
    VND_SEALEDMEDIA_SOFTSEAL_PDF = MIME::Types["application/vnd.sealedmedia.softseal.pdf"]
    VND_SEEMAIL = MIME::Types["application/vnd.seemail"]
    VND_SEMA = MIME::Types["application/vnd.sema"]
    VND_SEMD = MIME::Types["application/vnd.semd"]
    VND_SEMF = MIME::Types["application/vnd.semf"]
    VND_SHANA_INFORMED_FORMDATA = MIME::Types["application/vnd.shana.informed.formdata"]
    VND_SHANA_INFORMED_FORMTEMPLATE = MIME::Types["application/vnd.shana.informed.formtemplate"]
    VND_SHANA_INFORMED_INTERCHANGE = MIME::Types["application/vnd.shana.informed.interchange"]
    VND_SHANA_INFORMED_PACKAGE = MIME::Types["application/vnd.shana.informed.package"]
    VND_SIMTECH_MINDMAPPER = MIME::Types["application/vnd.SimTech-MindMapper"]
    VND_SMAF = MIME::Types["application/vnd.smaf"]
    VND_SOFTWARE602_FILLER_FORM_XML = MIME::Types["application/vnd.software602.filler.form+xml"]
    VND_SOFTWARE602_FILLER_FORM_XML_ZIP = MIME::Types["application/vnd.software602.filler.form-xml-zip"]
    VND_SOLENT_SDKM_XML = MIME::Types["application/vnd.solent.sdkm+xml"]
    VND_SPOTFIRE_DXP = MIME::Types["application/vnd.spotfire.dxp"]
    VND_SPOTFIRE_SFS = MIME::Types["application/vnd.spotfire.sfs"]
    VND_SSS_COD = MIME::Types["application/vnd.sss-cod"]
    VND_SSS_DTF = MIME::Types["application/vnd.sss-dtf"]
    VND_SSS_NTF = MIME::Types["application/vnd.sss-ntf"]
    VND_STREET_STREAM = MIME::Types["application/vnd.street-stream"]
    VND_SUN_WADL_XML = MIME::Types["application/vnd.sun.wadl+xml"]
    VND_SUS_CALENDAR = MIME::Types["application/vnd.sus-calendar"]
    VND_SVD = MIME::Types["application/vnd.svd"]
    VND_SWIFTVIEW_ICS = MIME::Types["application/vnd.swiftview-ics"]
    VND_SYNCML_DM_WBXML = MIME::Types["application/vnd.syncml.dm+wbxml"]
    VND_SYNCML_DM_XML = MIME::Types["application/vnd.syncml.dm+xml"]
    VND_SYNCML_DS_NOTIFICATION = MIME::Types["application/vnd.syncml.ds.notification"]
    VND_SYNCML_XML = MIME::Types["application/vnd.syncml+xml"]
    VND_TAO_INTENT_MODULE_ARCHIVE = MIME::Types["application/vnd.tao.intent-module-archive"]
    VND_TMOBILE_LIVETV = MIME::Types["application/vnd.tmobile-livetv"]
    VND_TRID_TPT = MIME::Types["application/vnd.trid.tpt"]
    VND_TRISCAPE_MXS = MIME::Types["application/vnd.triscape.mxs"]
    VND_TRUEAPP = MIME::Types["application/vnd.trueapp"]
    VND_TRUEDOC = MIME::Types["application/vnd.truedoc"]
    VND_UFDL = MIME::Types["application/vnd.ufdl"]
    VND_UIQ_THEME = MIME::Types["application/vnd.uiq.theme"]
    VND_UMAJIN = MIME::Types["application/vnd.umajin"]
    VND_UNITY = MIME::Types["application/vnd.unity"]
    VND_UOML_XML = MIME::Types["application/vnd.uoml+xml"]
    VND_UPLANET_ALERT = MIME::Types["application/vnd.uplanet.alert"]
    VND_UPLANET_ALERT_WBXML = MIME::Types["application/vnd.uplanet.alert-wbxml"]
    VND_UPLANET_BEARER_CHOICE = MIME::Types["application/vnd.uplanet.bearer-choice"]
    VND_UPLANET_BEARER_CHOICE_WBXML = MIME::Types["application/vnd.uplanet.bearer-choice-wbxml"]
    VND_UPLANET_CACHEOP = MIME::Types["application/vnd.uplanet.cacheop"]
    VND_UPLANET_CACHEOP_WBXML = MIME::Types["application/vnd.uplanet.cacheop-wbxml"]
    VND_UPLANET_CHANNEL = MIME::Types["application/vnd.uplanet.channel"]
    VND_UPLANET_CHANNEL_WBXML = MIME::Types["application/vnd.uplanet.channel-wbxml"]
    VND_UPLANET_LIST = MIME::Types["application/vnd.uplanet.list"]
    VND_UPLANET_LISTCMD = MIME::Types["application/vnd.uplanet.listcmd"]
    VND_UPLANET_LISTCMD_WBXML = MIME::Types["application/vnd.uplanet.listcmd-wbxml"]
    VND_UPLANET_LIST_WBXML = MIME::Types["application/vnd.uplanet.list-wbxml"]
    VND_UPLANET_SIGNAL = MIME::Types["application/vnd.uplanet.signal"]
    VND_VCX = MIME::Types["application/vnd.vcx"]
    VND_VD_STUDY = MIME::Types["application/vnd.vd-study"]
    VND_VECTORWORKS = MIME::Types["application/vnd.vectorworks"]
    VND_VIDSOFT_VIDCONFERENCE = MIME::Types["application/vnd.vidsoft.vidconference"]
    VND_VISIO = MIME::Types["application/vnd.visio"]
    VND_VISIONARY = MIME::Types["application/vnd.visionary"]
    VND_VIVIDENCE_SCRIPTFILE = MIME::Types["application/vnd.vividence.scriptfile"]
    VND_VSF = MIME::Types["application/vnd.vsf"]
    VND_WAP_SIC = MIME::Types["application/vnd.wap.sic"]
    VND_WAP_SLC = MIME::Types["application/vnd.wap.slc"]
    VND_WAP_WBXML = MIME::Types["application/vnd.wap.wbxml"]
    VND_WAP_WMLC = MIME::Types["application/vnd.wap.wmlc"]
    VND_WAP_WMLSCRIPTC = MIME::Types["application/vnd.wap.wmlscriptc"]
    VND_WEBTURBO = MIME::Types["application/vnd.webturbo"]
    VND_WFA_WSC = MIME::Types["application/vnd.wfa.wsc"]
    VND_WMC = MIME::Types["application/vnd.wmc"]
    VND_WMF_BOOTSTRAP = MIME::Types["application/vnd.wmf.bootstrap"]
    VND_WORDPERFECT = MIME::Types["application/vnd.wordperfect"]
    VND_WQD = MIME::Types["application/vnd.wqd"]
    VND_WRQ_HP3000_LABELLED = MIME::Types["application/vnd.wrq-hp3000-labelled"]
    VND_WT_STF = MIME::Types["application/vnd.wt.stf"]
    VND_WV_CSP_XML = MIME::Types["application/vnd.wv.csp+xml"]
    VND_WV_CSP_WBXML = MIME::Types["application/vnd.wv.csp+wbxml"]
    VND_WV_SSP_XML = MIME::Types["application/vnd.wv.ssp+xml"]
    VND_XARA = MIME::Types["application/vnd.xara"]
    VND_XFDL = MIME::Types["application/vnd.xfdl"]
    VND_XMI_XML = MIME::Types["application/vnd.xmi+xml"]
    VND_XMPIE_CPKG = MIME::Types["application/vnd.xmpie.cpkg"]
    VND_XMPIE_DPKG = MIME::Types["application/vnd.xmpie.dpkg"]
    VND_XMPIE_PLAN = MIME::Types["application/vnd.xmpie.plan"]
    VND_XMPIE_PPKG = MIME::Types["application/vnd.xmpie.ppkg"]
    VND_XMPIE_XLIM = MIME::Types["application/vnd.xmpie.xlim"]
    VND_YAMAHA_HV_DIC = MIME::Types["application/vnd.yamaha.hv-dic"]
    VND_YAMAHA_HV_SCRIPT = MIME::Types["application/vnd.yamaha.hv-script"]
    VND_YAMAHA_HV_VOICE = MIME::Types["application/vnd.yamaha.hv-voice"]
    VND_YAMAHA_SMAF_AUDIO = MIME::Types["application/vnd.yamaha.smaf-audio"]
    VND_YAMAHA_SMAF_PHRASE = MIME::Types["application/vnd.yamaha.smaf-phrase"]
    VND_YELLOWRIVER_CUSTOM_MENU = MIME::Types["application/vnd.yellowriver-custom-menu"]
    VND_ZZAZZ_DECK_XML = MIME::Types["application/vnd.zzazz.deck+xml"]
    VOICEXML_XML = MIME::Types["application/voicexml+xml"]
    WATCHERINFO_XML = MIME::Types["application/watcherinfo+xml"]
    WHOISPP_QUERY = MIME::Types["application/whoispp-query"]
    WHOISPP_RESPONSE = MIME::Types["application/whoispp-response"]
    WITA = MIME::Types["application/wita"]
    WORDPERFECT5_1 = MIME::Types["application/wordperfect5.1"]
    WSDL_XML = MIME::Types["application/wsdl+xml"]
    WSPOLICY_XML = MIME::Types["application/wspolicy+xml"]
    X400_BP = MIME::Types["application/x400-bp"]
    XCAP_ATT_XML = MIME::Types["application/xcap-att+xml"]
    XCAP_CAPS_XML = MIME::Types["application/xcap-caps+xml"]
    XCAP_EL_XML = MIME::Types["application/xcap-el+xml"]
    XCAP_ERROR_XML = MIME::Types["application/xcap-error+xml"]
    XCAP_NS_XML = MIME::Types["application/xcap-ns+xml"]
    XENC_XML = MIME::Types["application/xenc+xml"]
    XHTML_VOICE_XML = MIME::Types["application/xhtml-voice+xml"]
    XHTML_XML = MIME::Types["application/xhtml+xml"]
    XML = MIME::Types["application/xml"]
    XML_DTD = MIME::Types["application/xml-dtd"]
    XML_EXTERNAL_PARSED_ENTITY = MIME::Types["application/xml-external-parsed-entity"]
    XMPP_XML = MIME::Types["application/xmpp+xml"]
    XOP_XML = MIME::Types["application/xop+xml"]
    XV_XML = MIME::Types["application/xv+xml"]
    ZIP = MIME::Types["application/zip"]
end

module Audio
    _32KADPCM = MIME::Types["audio/32kadpcm"]
    _3GPP = MIME::Types["audio/3gpp"]
    _3GPP2 = MIME::Types["audio/3gpp2"]
    AC3 = MIME::Types["audio/ac3"]
    AMR = MIME::Types["audio/AMR"]
    AMR_WB = MIME::Types["audio/AMR-WB"]
    AMR_WB_ = MIME::Types["audio/amr-wb+"]
    ASC = MIME::Types["audio/asc"]
    BASIC = MIME::Types["audio/basic"]
    BV16 = MIME::Types["audio/BV16"]
    BV32 = MIME::Types["audio/BV32"]
    CLEARMODE = MIME::Types["audio/clearmode"]
    CN = MIME::Types["audio/CN"]
    DAT12 = MIME::Types["audio/DAT12"]
    DLS = MIME::Types["audio/dls"]
    DSR_ES201108 = MIME::Types["audio/dsr-es201108"]
    DSR_ES202050 = MIME::Types["audio/dsr-es202050"]
    DSR_ES202211 = MIME::Types["audio/dsr-es202211"]
    DSR_ES202212 = MIME::Types["audio/dsr-es202212"]
    EAC3 = MIME::Types["audio/eac3"]
    DVI4 = MIME::Types["audio/DVI4"]
    EVRC = MIME::Types["audio/EVRC"]
    EVRC0 = MIME::Types["audio/EVRC0"]
    EVRC1 = MIME::Types["audio/EVRC1"]
    EVRCB = MIME::Types["audio/EVRCB"]
    EVRCB0 = MIME::Types["audio/EVRCB0"]
    EVRCB1 = MIME::Types["audio/EVRCB1"]
    EVRC_QCP = MIME::Types["audio/EVRC-QCP"]
    EVRCWB = MIME::Types["audio/EVRCWB"]
    EVRCWB0 = MIME::Types["audio/EVRCWB0"]
    EVRCWB1 = MIME::Types["audio/EVRCWB1"]
    EXAMPLE = MIME::Types["audio/example"]
    G722 = MIME::Types["audio/G722"]
    G7221 = MIME::Types["audio/G7221"]
    G723 = MIME::Types["audio/G723"]
    G726_16 = MIME::Types["audio/G726-16"]
    G726_24 = MIME::Types["audio/G726-24"]
    G726_32 = MIME::Types["audio/G726-32"]
    G726_40 = MIME::Types["audio/G726-40"]
    G728 = MIME::Types["audio/G728"]
    G729 = MIME::Types["audio/G729"]
    G7291 = MIME::Types["audio/G7291"]
    G729D = MIME::Types["audio/G729D"]
    G729E = MIME::Types["audio/G729E"]
    GSM = MIME::Types["audio/GSM"]
    GSM_EFR = MIME::Types["audio/GSM-EFR"]
    ILBC = MIME::Types["audio/iLBC"]
    L8 = MIME::Types["audio/L8"]
    L16 = MIME::Types["audio/L16"]
    L20 = MIME::Types["audio/L20"]
    L24 = MIME::Types["audio/L24"]
    LPC = MIME::Types["audio/LPC"]
    MOBILE_XMF = MIME::Types["audio/mobile-xmf"]
    MPA = MIME::Types["audio/MPA"]
    MP4 = MIME::Types["audio/mp4"]
    MP4A_LATM = MIME::Types["audio/MP4A-LATM"]
    MPA_ROBUST = MIME::Types["audio/mpa-robust"]
    MPEG = MIME::Types["audio/mpeg"]
    MPEG4_GENERIC = MIME::Types["audio/mpeg4-generic"]
    OGG = MIME::Types["audio/ogg"]
    PARITYFEC = MIME::Types["audio/parityfec"]
    PCMA = MIME::Types["audio/PCMA"]
    PCMA_WB = MIME::Types["audio/PCMA-WB"]
    PCMU = MIME::Types["audio/PCMU"]
    PCMU_WB = MIME::Types["audio/PCMU-WB"]
    PRS_SID = MIME::Types["audio/prs.sid"]
    QCELP = MIME::Types["audio/QCELP"]
    RED = MIME::Types["audio/RED"]
    RTP_ENC_AESCM128 = MIME::Types["audio/rtp-enc-aescm128"]
    RTP_MIDI = MIME::Types["audio/rtp-midi"]
    RTX = MIME::Types["audio/rtx"]
    SMV = MIME::Types["audio/SMV"]
    SMV0 = MIME::Types["audio/SMV0"]
    SMV_QCP = MIME::Types["audio/SMV-QCP"]
    SP_MIDI = MIME::Types["audio/sp-midi"]
    T140C = MIME::Types["audio/t140c"]
    T38 = MIME::Types["audio/t38"]
    TELEPHONE_EVENT = MIME::Types["audio/telephone-event"]
    TONE = MIME::Types["audio/tone"]
    ULPFEC = MIME::Types["audio/ulpfec"]
    VDVI = MIME::Types["audio/VDVI"]
    VMR_WB = MIME::Types["audio/VMR-WB"]
    VND_3GPP_IUFP = MIME::Types["audio/vnd.3gpp.iufp"]
    VND_4SB = MIME::Types["audio/vnd.4SB"]
    VND_AUDIOKOZ = MIME::Types["audio/vnd.audiokoz"]
    VND_CELP = MIME::Types["audio/vnd.CELP"]
    VND_CISCO_NSE = MIME::Types["audio/vnd.cisco.nse"]
    VND_CMLES_RADIO_EVENTS = MIME::Types["audio/vnd.cmles.radio-events"]
    VND_CNS_ANP1 = MIME::Types["audio/vnd.cns.anp1"]
    VND_CNS_INF1 = MIME::Types["audio/vnd.cns.inf1"]
    VND_DIGITAL_WINDS = MIME::Types["audio/vnd.digital-winds"]
    VND_DLNA_ADTS = MIME::Types["audio/vnd.dlna.adts"]
    VND_DOLBY_MLP = MIME::Types["audio/vnd.dolby.mlp"]
    VND_DTS = MIME::Types["audio/vnd.dts"]
    VND_DTS_HD = MIME::Types["audio/vnd.dts.hd"]
    VND_EVERAD_PLJ = MIME::Types["audio/vnd.everad.plj"]
    VND_HNS_AUDIO = MIME::Types["audio/vnd.hns.audio"]
    VND_LUCENT_VOICE = MIME::Types["audio/vnd.lucent.voice"]
    VND_MS_PLAYREADY_MEDIA_PYA = MIME::Types["audio/vnd.ms-playready.media.pya"]
    VND_NOKIA_MOBILE_XMF = MIME::Types["audio/vnd.nokia.mobile-xmf"]
    VND_NORTEL_VBK = MIME::Types["audio/vnd.nortel.vbk"]
    VND_NUERA_ECELP4800 = MIME::Types["audio/vnd.nuera.ecelp4800"]
    VND_NUERA_ECELP7470 = MIME::Types["audio/vnd.nuera.ecelp7470"]
    VND_NUERA_ECELP9600 = MIME::Types["audio/vnd.nuera.ecelp9600"]
    VND_OCTEL_SBC = MIME::Types["audio/vnd.octel.sbc"]
    VND_QCELP = MIME::Types["audio/vnd.qcelp"]
    VND_RHETOREX_32KADPCM = MIME::Types["audio/vnd.rhetorex.32kadpcm"]
    VND_SEALEDMEDIA_SOFTSEAL_MPEG = MIME::Types["audio/vnd.sealedmedia.softseal.mpeg"]
    VND_VMX_CVSD = MIME::Types["audio/vnd.vmx.cvsd"]
    VORBIS = MIME::Types["audio/vorbis"]
    VORBIS_CONFIG = MIME::Types["audio/vorbis-config"]
end

module Image
    CGM = MIME::Types["image/cgm"]
    EXAMPLE = MIME::Types["image/example"]
    FITS = MIME::Types["image/fits"]
    G3FAX = MIME::Types["image/g3fax"]
    GIF = MIME::Types["image/gif"]
    IEF = MIME::Types["image/ief"]
    JP2 = MIME::Types["image/jp2"]
    JPEG = MIME::Types["image/jpeg"]
    JPM = MIME::Types["image/jpm"]
    JPX = MIME::Types["image/jpx"]
    NAPLPS = MIME::Types["image/naplps"]
    PNG = MIME::Types["image/png"]
    PRS_BTIF = MIME::Types["image/prs.btif"]
    PRS_PTI = MIME::Types["image/prs.pti"]
    T38 = MIME::Types["image/t38"]
    TIFF = MIME::Types["image/tiff"]
    TIFF_FX = MIME::Types["image/tiff-fx"]
    VND_ADOBE_PHOTOSHOP = MIME::Types["image/vnd.adobe.photoshop"]
    VND_CNS_INF2 = MIME::Types["image/vnd.cns.inf2"]
    VND_DJVU = MIME::Types["image/vnd.djvu"]
    VND_DWG = MIME::Types["image/vnd.dwg"]
    VND_DXF = MIME::Types["image/vnd.dxf"]
    VND_FASTBIDSHEET = MIME::Types["image/vnd.fastbidsheet"]
    VND_FPX = MIME::Types["image/vnd.fpx"]
    VND_FST = MIME::Types["image/vnd.fst"]
    VND_FUJIXEROX_EDMICS_MMR = MIME::Types["image/vnd.fujixerox.edmics-mmr"]
    VND_FUJIXEROX_EDMICS_RLC = MIME::Types["image/vnd.fujixerox.edmics-rlc"]
    VND_GLOBALGRAPHICS_PGB = MIME::Types["image/vnd.globalgraphics.pgb"]
    VND_MICROSOFT_ICON = MIME::Types["image/vnd.microsoft.icon"]
    VND_MIX = MIME::Types["image/vnd.mix"]
    VND_MS_MODI = MIME::Types["image/vnd.ms-modi"]
    VND_NET_FPX = MIME::Types["image/vnd.net-fpx"]
    VND_SEALED_PNG = MIME::Types["image/vnd.sealed.png"]
    VND_SEALEDMEDIA_SOFTSEAL_GIF = MIME::Types["image/vnd.sealedmedia.softseal.gif"]
    VND_SEALEDMEDIA_SOFTSEAL_JPG = MIME::Types["image/vnd.sealedmedia.softseal.jpg"]
    VND_SVF = MIME::Types["image/vnd.svf"]
    VND_WAP_WBMP = MIME::Types["image/vnd.wap.wbmp"]
    VND_XIFF = MIME::Types["image/vnd.xiff"]
end

module Message
    CPIM = MIME::Types["message/CPIM"]
    DELIVERY_STATUS = MIME::Types["message/delivery-status"]
    DISPOSITION_NOTIFICATION = MIME::Types["message/disposition-notification"]
    EXAMPLE = MIME::Types["message/example"]
    EXTERNAL_BODY = MIME::Types["message/external-body"]
    GLOBAL = MIME::Types["message/global"]
    GLOBAL_DELIVERY_STATUS = MIME::Types["message/global-delivery-status"]
    GLOBAL_DISPOSITION_NOTIFICATION = MIME::Types["message/global-disposition-notification"]
    GLOBAL_HEADERS = MIME::Types["message/global-headers"]
    HTTP = MIME::Types["message/http"]
    NEWS = MIME::Types["message/news"]
    PARTIAL = MIME::Types["message/partial"]
    RFC822 = MIME::Types["message/rfc822"]
    S_HTTP = MIME::Types["message/s-http"]
    SIP = MIME::Types["message/sip"]
    SIPFRAG = MIME::Types["message/sipfrag"]
    TRACKING_STATUS = MIME::Types["message/tracking-status"]
    VND_SI_SIMP = MIME::Types["message/vnd.si.simp"]
end

module Model
    EXAMPLE = MIME::Types["model/example"]
    IGES = MIME::Types["model/iges"]
    MESH = MIME::Types["model/mesh"]
    VND_DWF = MIME::Types["model/vnd.dwf"]
    VND_FLATLAND_3DML = MIME::Types["model/vnd.flatland.3dml"]
    VND_GDL = MIME::Types["model/vnd.gdl"]
    VND_GS_GDL = MIME::Types["model/vnd.gs-gdl"]
    VND_GTW = MIME::Types["model/vnd.gtw"]
    VND_MOML_XML = MIME::Types["model/vnd.moml+xml"]
    VND_MTS = MIME::Types["model/vnd.mts"]
    VND_PARASOLID_TRANSMIT_BINARY = MIME::Types["model/vnd.parasolid.transmit.binary"]
    VND_PARASOLID_TRANSMIT_TEXT = MIME::Types["model/vnd.parasolid.transmit.text"]
    VND_VTU = MIME::Types["model/vnd.vtu"]
    VRML = MIME::Types["model/vrml"]
end

module Multipart
    ALTERNATIVE = MIME::Types["multipart/alternative"]
    APPLEDOUBLE = MIME::Types["multipart/appledouble"]
    BYTERANGES = MIME::Types["multipart/byteranges"]
    DIGEST = MIME::Types["multipart/digest"]
    ENCRYPTED = MIME::Types["multipart/encrypted"]
    EXAMPLE = MIME::Types["multipart/example"]
    FORM_DATA = MIME::Types["multipart/form-data"]
    HEADER_SET = MIME::Types["multipart/header-set"]
    MIXED = MIME::Types["multipart/mixed"]
    PARALLEL = MIME::Types["multipart/parallel"]
    RELATED = MIME::Types["multipart/related"]
    REPORT = MIME::Types["multipart/report"]
    SIGNED = MIME::Types["multipart/signed"]
    VOICE_MESSAGE = MIME::Types["multipart/voice-message"]
end

module Text
    CALENDAR = MIME::Types["text/calendar"]
    CSS = MIME::Types["text/css"]
    CSV = MIME::Types["text/csv"]
    DIRECTORY = MIME::Types["text/directory"]
    DNS = MIME::Types["text/dns"]
    ECMASCRIPT = MIME::Types["text/ecmascript"]
    ENRICHED = MIME::Types["text/enriched"]
    EXAMPLE = MIME::Types["text/example"]
    HTML = MIME::Types["text/html"]
    JAVASCRIPT = MIME::Types["text/javascript"]
    PARITYFEC = MIME::Types["text/parityfec"]
    PLAIN = MIME::Types["text/plain"]
    PRS_FALLENSTEIN_RST = MIME::Types["text/prs.fallenstein.rst"]
    PRS_LINES_TAG = MIME::Types["text/prs.lines.tag"]
    RED = MIME::Types["text/red"]
    RFC822_HEADERS = MIME::Types["text/rfc822-headers"]
    RICHTEXT = MIME::Types["text/richtext"]
    RTF = MIME::Types["text/rtf"]
    RTP_ENC_AESCM128 = MIME::Types["text/rtp-enc-aescm128"]
    RTX = MIME::Types["text/rtx"]
    SGML = MIME::Types["text/sgml"]
    T140 = MIME::Types["text/t140"]
    TAB_SEPARATED_VALUES = MIME::Types["text/tab-separated-values"]
    TROFF = MIME::Types["text/troff"]
    ULPFEC = MIME::Types["text/ulpfec"]
    VND_ABC = MIME::Types["text/vnd.abc"]
    VND_CURL = MIME::Types["text/vnd.curl"]
    VND_DMCLIENTSCRIPT = MIME::Types["text/vnd.DMClientScript"]
    VND_ESMERTEC_THEME_DESCRIPTOR = MIME::Types["text/vnd.esmertec.theme-descriptor"]
    VND_FLY = MIME::Types["text/vnd.fly"]
    VND_FMI_FLEXSTOR = MIME::Types["text/vnd.fmi.flexstor"]
    VND_GRAPHVIZ = MIME::Types["text/vnd.graphviz"]
    VND_IN3D_3DML = MIME::Types["text/vnd.in3d.3dml"]
    VND_IN3D_SPOT = MIME::Types["text/vnd.in3d.spot"]
    VND_IPTC_NEWSML = MIME::Types["text/vnd.IPTC.NewsML"]
    VND_IPTC_NITF = MIME::Types["text/vnd.IPTC.NITF"]
    VND_LATEX_Z = MIME::Types["text/vnd.latex-z"]
    VND_MOTOROLA_REFLEX = MIME::Types["text/vnd.motorola.reflex"]
    VND_MS_MEDIAPACKAGE = MIME::Types["text/vnd.ms-mediapackage"]
    VND_NET2PHONE_COMMCENTER_COMMAND = MIME::Types["text/vnd.net2phone.commcenter.command"]
    VND_SI_URICATALOGUE = MIME::Types["text/vnd.si.uricatalogue"]
    VND_SUN_J2ME_APP_DESCRIPTOR = MIME::Types["text/vnd.sun.j2me.app-descriptor"]
    VND_TROLLTECH_LINGUST = MIME::Types["text/vnd.trolltech.lingust"]
    VND_WAP_SI = MIME::Types["text/vnd.wap.si"]
    VND_WAP_SL = MIME::Types["text/vnd.wap.sl"]
    VND_WAP_WML = MIME::Types["text/vnd.wap.wml"]
    VND_WAP_WMLSCRIPT = MIME::Types["text/vnd.wap.wmlscript"]
    XML = MIME::Types["text/xml"]
    XML_EXTERNAL_PARSED_ENTITY = MIME::Types["text/xml-external-parsed-entity"]
end

module Video
    _3GPP = MIME::Types["video/3gpp"]
    _3GPP2 = MIME::Types["video/3gpp2"]
    _3GPP_TT = MIME::Types["video/3gpp-tt"]
    BMPEG = MIME::Types["video/BMPEG"]
    BT656 = MIME::Types["video/BT656"]
    CELB = MIME::Types["video/CelB"]
    DV = MIME::Types["video/DV"]
    EXAMPLE = MIME::Types["video/example"]
    H261 = MIME::Types["video/H261"]
    H263 = MIME::Types["video/H263"]
    H263_1998 = MIME::Types["video/H263-1998"]
    H263_2000 = MIME::Types["video/H263-2000"]
    H264 = MIME::Types["video/H264"]
    JPEG = MIME::Types["video/JPEG"]
    JPEG2000 = MIME::Types["video/jpeg2000"]
    MJ2 = MIME::Types["video/MJ2"]
    MP1S = MIME::Types["video/MP1S"]
    MP2P = MIME::Types["video/MP2P"]
    MP2T = MIME::Types["video/MP2T"]
    MP4 = MIME::Types["video/mp4"]
    MP4V_ES = MIME::Types["video/MP4V-ES"]
    MPV = MIME::Types["video/MPV"]
    MPEG = MIME::Types["video/mpeg"]
    MPEG4_GENERIC = MIME::Types["video/mpeg4-generic"]
    NV = MIME::Types["video/nv"]
    OGG = MIME::Types["video/ogg"]
    PARITYFEC = MIME::Types["video/parityfec"]
    POINTER = MIME::Types["video/pointer"]
    QUICKTIME = MIME::Types["video/quicktime"]
    RAW = MIME::Types["video/raw"]
    RTP_ENC_AESCM128 = MIME::Types["video/rtp-enc-aescm128"]
    RTX = MIME::Types["video/rtx"]
    SMPTE292M = MIME::Types["video/SMPTE292M"]
    ULPFEC = MIME::Types["video/ulpfec"]
    VC1 = MIME::Types["video/vc1"]
    VND_CCTV = MIME::Types["video/vnd.CCTV"]
    VND_DLNA_MPEG_TTS = MIME::Types["video/vnd.dlna.mpeg-tts"]
    VND_FVT = MIME::Types["video/vnd.fvt"]
    VND_HNS_VIDEO = MIME::Types["video/vnd.hns.video"]
    VND_IPTVFORUM_1DPARITYFEC_1010 = MIME::Types["video/vnd.iptvforum.1dparityfec-1010"]
    VND_IPTVFORUM_1DPARITYFEC_2005 = MIME::Types["video/vnd.iptvforum.1dparityfec-2005"]
    VND_IPTVFORUM_2DPARITYFEC_1010 = MIME::Types["video/vnd.iptvforum.2dparityfec-1010"]
    VND_IPTVFORUM_2DPARITYFEC_2005 = MIME::Types["video/vnd.iptvforum.2dparityfec-2005"]
    VND_IPTVFORUM_TTSAVC = MIME::Types["video/vnd.iptvforum.ttsavc"]
    VND_IPTVFORUM_TTSMPEG2 = MIME::Types["video/vnd.iptvforum.ttsmpeg2"]
    VND_MOTOROLA_VIDEO = MIME::Types["video/vnd.motorola.video"]
    VND_MOTOROLA_VIDEOP = MIME::Types["video/vnd.motorola.videop"]
    VND_MPEGURL = MIME::Types["video/vnd.mpegurl"]
    VND_MS_PLAYREADY_MEDIA_PYV = MIME::Types["video/vnd.ms-playready.media.pyv"]
    VND_NOKIA_INTERLEAVED_MULTIMEDIA = MIME::Types["video/vnd.nokia.interleaved-multimedia"]
    VND_NOKIA_VIDEOVOIP = MIME::Types["video/vnd.nokia.videovoip"]
    VND_OBJECTVIDEO = MIME::Types["video/vnd.objectvideo"]
    VND_SEALED_MPEG1 = MIME::Types["video/vnd.sealed.mpeg1"]
    VND_SEALED_MPEG4 = MIME::Types["video/vnd.sealed.mpeg4"]
    VND_SEALED_SWF = MIME::Types["video/vnd.sealed.swf"]
    VND_SEALEDMEDIA_SOFTSEAL_MOV = MIME::Types["video/vnd.sealedmedia.softseal.mov"]
    VND_VIVO = MIME::Types["video/vnd.vivo"]
end
end
end
